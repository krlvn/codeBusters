[{"user_id": 1, "title": "Коллекция советских игровых автоматов на вашем Raspberry Pi", "description": "В СССР игровая индустрия была слабо развита в 80-е годы. Те, кто застал это время в сознательном воз", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-29T11:39:52.000Z", "updated_at": "2022-10-29T11:39:52.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/455/d28/9d3/455d289d32c1a30840f86b139a1a481d.png", "content": "В СССР игровая индустрия была слабо развита в 80-е годы. Те, кто застал это время в сознательном возрасте, хорошо помнят игровые автоматы, которые стояли в кинотеатрах, домах культуры и парках отдыха, а также очереди желающих на них поиграть. В основном это были электромеханические игровые автоматы, такие как «Морской бой», «Воздушный бой».Самыми «крутыми» были телевизионные игровые автоматы «Магистраль», «Перехватчик», «Городки», «Скачки», но графика у них была примитивная и часто черно-белая.Во второй половине восьмидесятых в аттракционах стали появляться игровые автоматы. Первое, что бросалось в глаза, это то, что у них была цветная графика с гораздо более сложными фигурами. Среди этих игр выделялся автомат «Конек-Горбунок», к нему стояла самая длинная очередь поиграть, больше, чем к «Магистрали» или «Перехватчику». Наверное, это был самый успешный советский игровой автомат с использованием микропроцессоров.В этой статье я хочу рассказать, как на Raspberry Pi поиграть в «Конька-Горбунка», а также «Снежную королеву», «Кота рыболова», «S.O.S.», «Городки», «Бильярд» и некоторые другие игры из советских автоматов, получить массу положительных эмоций и, если вам захочется, удивить своих знакомых тем, что у вас есть такие игры.В последнее время во всем мире наблюдается тенденция на компьютерные игры 80-х, начала 90-х годов. В магазинах можно купить различные игровые приставки, на которых можно поиграть в старые игры и погрузиться в детские воспоминания.Поиграть можно и без приставки, используя многочисленные эмуляторы. Тема эмуляции игровых консолей, игровых автоматов не нова. В основном эмулируются игровые консоли и игровые автоматы, в которых используется микропроцессор.Загрузив из Интернет нужный ROM (образ микросхем ПЗУ эмулируемого устройства) и эмулятор, можно поиграть в любимую игру детства на современном компьютере.Из личного опыта могу сказать, что лучше всего играть в эмуляторе на Raspberry Pi. Он компактный, к нему можно подключить джойстики и телевизор, а оболочка/дистрибутив LinuxRetroPieимеет красочный графический интерфейс, приближенный к игровой приставке и оптимизированный под джойстик (за исключением некоторых более редких настроек, где требуется клавиатура).Я думал, что сэмулировать можно только западные консоли и аркадные автоматы (NES, SNES, SEGA Mega Drive), оказалось, что я ошибался.Как возникла идеяНаверное, у каждого возникает желание поностальгировать о своем детстве, еще раз ощутить то, что чувствовал много лет назад. Для тех, у которых детство было в 80-x-90-х годах, это были игровые автоматы, которые сейчас принято называть аркадными.Поэтому и пользуются популярностью такие музеи какМузей Советских Игровых Автоматов. Побывав в этом музее в Москве, я был под приятными впечатлениями от посещения. Там я увидел практически все советские игровые  автоматы, на которых играл в детстве и даже больше. Омрачало только то, что многие автоматы были потрепаны временем и нещадной эксплуатацией, у многих были разбитые джойстики и севшие электронно-лучевые трубки.Зная о RetroPie, я захотел подружить его с советскими игровыми автоматами, а именно, запустить игры с советских игровых автоматов на нем. Очень хотелось запустить «Конька-Горбунка», но слишком эта мысль казалась фантастической, так нужен был эмулятор и ROM и была малая вероятность, что он существует.При всей своей загадочности и запутанности оказалось, что эмулятор MAME, входящий в состав RetroPie позволяет это сделать.Интересные факты о советских игровых автоматахПогрузившись в тему советских игровых автоматов, я узнал много интересного для себя. По теме советских игровых автоматов написано немало статей. Я здесь приведу краткий обзор советских автоматов и интересные факты.1. Аркадные автоматы в СССР, да и как во всем мире были трех видов:электронно-механические.телевизионные с использованием дискретной логики.телевизионные с использованием центрального процессора.Если эмуляция первых двух типов вызывает сложности и сэмулировать очень правдоподобно сложно, то для последних такая эмуляция в настоящее время выполняется на достаточно высоком уровне.2. Первые телевизионные игровые автоматы были построены на дискретной логике. Особенность таких автоматов в том, что в них не было процессора (да, было такое, хоть и многим сейчас сложно представить).3. На данный момент известно, что в Советском Союзе произвели и внедрили 4 серии игровых автоматов на базе микропроцессоров:«ТИА-МЦ-1»;«Фотон»;«Фотон ИК-02»;«Спектр».4. В Советском Союзе большинство игровых автоматов производили на оборонных предприятиях, в отличие от Японии и США, где была хорошо развита игровая индустрия.5. Советский аналог всемирно известного игрового (аркадного) автомата Pong от фирмы Atari – «Телеспорт». Pong – был первым коммерчески успешным автоматом на дискретной логике. В 2022 год этот автомат отмечает 50-ти летний юбилей.Телевизионный игровой автомат «TИА-МЦ-1»В середине 80-х годов в г. Винница УССР на производственном объединении «Терминал» был разработан Телевизионный Игровой Автомат Многокадровый Цветной, который позволял заменять игровую программу путем смены одного блока. На базе этого игрового автомата были созданы следующие игры:«Автогонки»;«Биллиард»;«Городки»;«Звёздный рыцарь»;«Истребитель»;«Конёк-Горбунок»;«Кот-рыболов»;«Котигорошко»;«Остров дракона»;«Остров сокровищ»;«Снежная королева»;«S.O.S.».К сожалению, до наших дней сохранились не все разновидности этого игрового автомата. Из 12 известно только 6-ти сохранившихся: «Биллиард», «Городки», «Конёк-Горбунок», «Кот-рыболов», «Снежная королева», «S.O.S.».Если вам интересна история разработки этого автомата, настоятельно советую вам посмотретьинтервью с разработчиком «ТИА-МЦ-1» Александром Гоноровским. В этом видео вы узнаете много интересного, в том числе и о предприятии, на котором проектировался «ТИА-МЦ-1».Также на производственном объединении «Терминал» были выпущены и введены в эксплуатации два телевизионных игровых автомата на основе микропроцессоров, но не на базе «ТИА-МЦ-1». Это «Мотогонки» и «Истребители», но они были не такие красочные и привлекательные.Телевизионные игровые автоматы «Фотон» и «Фотон ИК-02»«Фотон» выпускался одноименным кооперативом в конце 80-х начале 90-х на базе ПК-8000 (советском бытовом компьютере, который пытались сделать похожим на японский Yamaha MSX). Также кооперативы выпускал «Фотон ИК-02» и на базе ZX-Spectrum. На данный момент известно о следующих играх для автомата «Фотон»: «Питон», «Лабиринт», «Клад», «Тетрис» и следующих для автомата «Фотон ИК-02»: «Бродяга», «Черный корабль», «Повар», «Собрать «Буран»», «Агропром».Автомат «Фотон» и игры к нему поддерживаются MAME 0.133u1 и старше, а «Фотон ИК-02» и игры к нему поддерживаются MAME 0.134 и старше.В отличие от «ТИА-МЦ-1» игры у этих автоматов, с моей точки зрения, не отличаются уникальностью и в большинстве своем являются переведенными на русский язык и адаптированные под игровой автомат зарубежные игры для бытовых компьютеров. Но это было время такое, кооперативы зарабатывали на чем могли.Телевизионный игровой автомат «Спектр»Выпускался на Северодонецком приборостроительном заводе с 1991 года. Информации о нем меньше всего в интернете. Автомат содержал три игры: «Звездный АС», «Флиппер» и «Сокровища Нептуна», которые можно было выбирать при помощи кнопок. Эмуляторы и ROM для него я не нашел.Эмулятор MAME и Retro PiСложность эмулятора MAME для RetroPie заключается в том, что существует много версий, которые можно установить. Официальная страница для MAME на сайте RetroPie еще больше запутывает.Использование MAME для эмуляции «ТИА-МЦ-1» для меня было покрыто мраком. Какие-то верcии MAME открывали ROM и все работало, другие отказывались, причем не для всех игр. Все это походило на мистику, пока я не посмотрел исходный код драйвера для «ТИА-МЦ-1» в MAME. В драйвере жестко прописаны ROM, которые поддерживает драйвер. На данный момент версия MAME 0.248 поддерживает только 6 игр для «ТИА-МЦ-1». Самая первая игра, которую поддерживал драйвер, была «Конек-Горбунок», поэтому она должна работать на всех MAME начиная с версии 0.121В интернете существует множество туториалов и видео, рассказывающих о том, как можно установить и настроить RetroPie. Я расскажу, как делал я для конкретного случая, для эмуляции игр «ТИА-МЦ-1», «Фотон» и «Фотон ИК-02». Я использовал Raspberry Pi 4, вы можете попробовать использовать 2-ю или третью версию Raspberry Pi.Что понадобится1. Raspberry Pi 4.2. MicroSD карта минимум на 4GB.3. Клавиатура USB (для некоторых настроек).4. Джойстик.5. Адаптер питания 5В/3A и кабель USB type C.6. Кабель Micro HDMI - HDMI.7. Компьютер и локальная сеть WiFi.8. Желательно корпус к Raspberry Pi, радиаторы охлаждения и кулер.Настройка советских игровых автоматов в Retro PiСкачиваемRetroPie с официального сайтаЗаписываем образ на MicroSD карту. Я использовалbalenaEtcher.Собираем наш «игровой автомат». Вставляем карту Micro SD, подключам джойстик, клавиатуру, монитор или телевизор, кабель питания.Включаем Raspberry Pi.Если вы подключили джойстик, то система предложит вам его настроить. Нажмите на любую кнопку на джойстике, чтобы начать его установку. Если вы хотите для какого-то действия не назначать кнопку джойстика, просто зажмите и  держите кнопку, после перейдете на настройку кнопки для следующего действия. Дляhotkeyвыберите кнопкуSelectджойстика.Настраиваем Wifi.Wifi->Connect to Wifi Network. Выбираем точку доступа, вводим пароль.Настраиваем hostname для Raspberry.System Options->Hostname. Для этого необходима клавиатура, если вас устраивает значение имени хоста по умолчанию, то можете оставить, как есть.Включаем SSH.Interface options -> SSH. ПотомFinish -> Reboot.Устанавливаем lr-mame2010. MAME имеет множество версий. Я достаточно долго искал ту версию MAME, которая бы позволила запускать игры «ТИА-МЦ-1». Для этого нам необходимо установить дополнительный пакет в RetroPie. MAME 2010 поддерживает не все игры для «ТИА-МЦ-1», но эмуляция в ней мне субъективно показалась самой приятной.RetroPie Setup -> Manage packages -> opt -> lr-mame2010->Install from precompiled binary.10.Загружаем образы игр из Интернет. Образы находятся на следующей странице -https://archive.org/download/mame-merged/mame-merged/. Там образы для многих игр, поддерживаемых MAME. Я приведу в таблице только интересующие нас игры.«ТИА-МЦ-1»«Биллиард»https://archive.org/download/mame-merged/mame-merged/bilyard.zip«Городки»https://archive.org/download/mame-merged/mame-merged/gorodki.zip«Конёк-Горбунок»,https://archive.org/download/mame-merged/mame-merged/konek.zip«Кот-рыболов»,https://archive.org/download/mame-merged/mame-merged/kot.zip«Снежная королева»https://archive.org/download/mame-merged/mame-merged/koroleva.zip«S.O.S.»https://archive.org/download/mame-merged/mame-merged/sosterm.zip«Фотон»«Питон»https://archive.org/download/mame-merged/mame-merged/phpython.zip«Лабиринт», «Клад»https://archive.org/download/mame-merged/mame-merged/phklad.zip«Тетрис»https://archive.org/download/mame-merged/mame-merged/phtetris.zip«Фотон ИК-02»«Бродяга»https://archive.org/download/mame-merged/mame-merged/brod.zip«Черный корабль»https://archive.org/download/mame-merged/mame-merged/black.zip«Повар», «Собрать «Буран»», «Агропром»https://archive.org/download/mame-merged/mame-merged/kot.zipКопируем игры в сетевую папку на Raspberry Pi. В адресной строке Проводника введите\\\\<имя хоста Raspberry Pi или IP адрес>. В моем случае это\\\\pi4. Образы необходимо поместить в папкуroms\\arcade.Перегружаем Emulation Station.Start->Quit->Restart EmulationStation.Выбираем и запускаем игру. Выбираем эмулятор по умолчанию lr-mame2010Нажимаем Start на джойстике и наслаждаемся игрой.Для запуска “Городков” и “Кота” необходимо установить другой эмулятор MAME и настроить запуск этого эмулятора для этих ROM. Оставляю это упражнение за читателем.ВыводыЭмулятор MAME на данный момент позволяет эмулировать 6 из 12 известных на данный момент игр для «ТИА-МЦ-1», 2 из которых только эмулируются на последних версиях MAME, а также все известные игры для «Фотон» и «Фотон ИК-02».Эмуляция игр для «ТИА МЦ-1» не заменит аутентичные игровые автоматы, но у вас не будет разочарования от севших электронно-лучевых трубок или убитых джойстиков.Если есть желание и несильно кривые руки, то, используя немного китайских комплектующих, монитор и Raspberry Pi можно сделать игровой автомат. Автомат сможет воспроизводить не только игры из этой статьи, но и множество игр, которые вы сможете запустить на RetroPie. Как это сделать написано встатье.Если вы знаете еще о каких-то советских игровых автоматах на микропроцессорной логике, которые я не осветил в статье, а также ROM и эмуляторов для них, буду рад, если вы поделитесь в комментариях."}, {"user_id": 1, "title": "Twitter начал процедуру делистинга и станет частной компанией, совет директоров будет распущен", "description": "СМИвыяснили, что Маск купил Twitter через слияние со своей компанией X Holdings II, Inc. — дочерней ", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T18:00:47.000Z", "updated_at": "2022-10-28T18:00:47.000Z", "image": "https://habrastorage.org/r/w780q1/webt/yv/cw/6y/yvcw6ypwbhb0rgx4fes2mro3b8e.jpeg", "content": "СМИвыяснили, что Маск купил Twitter через слияние со своей компанией X Holdings II, Inc. — дочерней компанией X Holdings I, Inc., также полностью принадлежащей Маску. Сейчас Twitter начал процедуруделистингас фондовой биржи NYSE и готовится стать частной компанией. Текущий совет директоров Twitter будет распущен. Новое руководство будет представлять Маск в роли исполнительного генерального директора и полностью обновлённый совет директоров из приближённых коллег Маска и инвесторов проекта.29 октября Маскзаявил, что Twitter сформирует совет по модерации контента с самыми разными точками зрения. До созыва этого совета в соцсети не будет приниматься никаких важных решений по содержанию или восстановлению удалённых аккаунтов.Twitter будет исключён из листинга Нью-Йоркской фондовой биржи, а его акции больше не будут торговаться на публичных рынках с 8 ноября, согласно заявлению Комиссии по ценным бумагам США.Экспертысчитают, что превращение Twitter в частную компанию даёт Маску ряд преимуществ. Например, Twitter не надо будет публиковать отчётность, к платформе будет меньше внимания от регуляторов. С другой стороны, Маск сможет закрыто и в своей непреклонной манере контролировать управление компанией, причём ему не нужно будет учитывать интересы инвесторов. Фактически Маск может полностью изменить Twitter, в том числе перестроить правила содержания платформы, её финансы и приоритеты, не обращая внимания на регуляторов и инвесторов.28 октября 2022 года Илон Маск официальнокупилсоцсеть Twitter за $44 млрд. Сооснователь PayPal, владелец Tesla и SpaceX сделал это спустя шесть месяцев после своего первоначального предложения о покупке платформы.В качестве первого действия Маск, как глава новой компании,написалтвит «птичка свободна» (the bird is freed) иуволилвсёруководствоплатформы, включая гендиректора Парага Агравала (работалв компании с 2021 года, пришел на место основателя Джека Дорси), финансового директора Неда Сигала (работал в компании с 2017 года), директор по работе с клиентами Сару Персонетт, главу отдела правовой политики Виджаю Гадде и главного юридического консультанта компании Шона Эджетта (работал в компании с 2012 года).По словам сотрудников Twitter, Эджетта, Агравала и Сигала, которые были на своих рабочих местах, после объявления об увольнении сразувывелииз здания штаб-квартиры сотрудники охраны.Красным кружком обведена Виджая Гадде — главный юрист корпорации Twitter, а также ведущий специалист компании по политике безопасности. Фото сделано 27 октября в штаб-квартире соцсети, где Маск уже выступал перед сотрудниками в качестве нового владельца. Через некоторое время после этой встречи Маск уволил Гадде и остальных топ-менеджеров соцсети.Уволенные топ-менеджеры компанииполучаткомпенсации. Агравалу выплата составит $38,7 млн, Сигал получит $25,4 млн, Гадде обещали $12,5 млн, а Персонетт выплатят $11,2 млн.Твит Маска после покупки Twitter.Кофейня в штаб-квартире Twitter. Маскобщаетсяс разработчиками Twitter.Ожидается, что Маск временно станет генеральным директором Twitter, но может уступить эту должность в долгосрочной перспективе лояльному новому курсу компании сотруднику.Примечательно, что Маскперестраховалсяи привёл с собой разработчиков из Tesla, чтобы они проверили текущую ситуацию с исходным кодом платформы и пообщались с коллегами из Twitter, отвечающим за его развитие. В апреле Twitter временнозапретиласотрудникам вносить изменения в код платформы без разрешения руководства после объявления о сделке с Маском.Эксперты считают, что следующим шагом Маска будетвозвращениеиз перманентной блокировки многих знаменитостей и ранее популярных пользователей платформы. Маск ранее заявлял, что считает себя приверженцем свободы слова и неоднократно выступал за то, чтобы платформа перестала выдавать пожизненные баны за нарушение правил. Он также собирался отменить бан, выданный Дональду Трампу.18 октября СМИсообщили, что Twitter заблокировала биржевые счета сотрудников в ожидании закрытия сделки с Маском. Сотрудники не могут получить доступ к своим акциям Twitter из своей рабочей учётной записи, также им запрещено торговать акциями, включая теми, которые достались в качестве бонусов через программу вознаграждений за акции. На странице компании говорилось, что данное ограничение было введено «в ожидании закрытия сделки по приобретению Twitter организацией, контролируемой Маском». Эксперты пояснили, что это замораживание активов акций позволяет компании выполнить окончательную сверку счетов сотрудников до закрытия сделки по приобретению. После делистинга сотрудники получат денежную компенсацию за положенные им акции Twitter.Примечательно, что в сети появились фотографии, якобы, уволенных разработчиков из Twitter после слияния, хотя Маск обещал не сокращать персонал. Маску пришлось даже прокомментировать эту ситуацию. Он сказал, что это фейковые сотрудники."}, {"user_id": 1, "title": "Базовый iPad 10 оснастили замедленным портом USB-C", "description": "Выяснилось, что недавно выпущенный базовый iPad десятого поколенияоснащёнсамым медленным портом USB-", "category_id": 5, "active": true, "is_deleted": false, "created_at": "2022-10-28T16:55:35.000Z", "updated_at": "2022-10-28T16:55:35.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/66b/9a8/75d/66b9a875d2b198237a9a7146641db7a4.jpg", "content": "Выяснилось, что недавно выпущенный базовый iPad десятого поколенияоснащёнсамым медленным портом USB-C среди всех планшетов компании. Скорость передачи данных сопоставима с обычным Lightning.Журналисты издания The Vergeвыяснили, что компания Apple выпустила базовый iPad с замедленным портом USB-C. Передача данных ограничена скоростью в 480 Мбит/с, что сопоставимо со скоростью USB 2.0. Таким образом компания оснастила планшет современным разъёмом, но ограничила его возможности на уровне Lightning.Также отмечается, что порт USB-C в iPad десятого поколения самый медленный среди всех планшетов Apple. Другие устройства имеют следующую скорость передачи данных:iPad Pro на базе чипа M1 — до 40 Гбит/с;iPad Air 5 — до 10 Гбит/с;iPad Air 4 — до 5 Гбит/с;iPad mini — до 5 Гбит/с.Важно отметить, что в анонсе компания не рассказала про скорость передачи данных, а обратила внимание только на сам факт отказа от Lightning. Вероятно, что для целевой аудитории базового iPad не так важна высокая скорость работы USB-C, но некоторым пользователям важно учитывать это при выборе нового планшета Apple."}, {"user_id": 1, "title": "РБК: два российских банка планируют установить в Турции и ОАЭ POS-терминалы для приёма карт «Мир»", "description": "Фото: Matteo Nardone / Keystone Press Agency / Global Look PressДва крупных российских банка собираю", "category_id": 2, "active": true, "is_deleted": false, "created_at": "2022-10-28T16:51:21.000Z", "updated_at": "2022-10-28T16:51:21.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/82d/515/44a/82d51544a913cc40c44c8cceb0b19906.jpeg", "content": "Фото: Matteo Nardone / Keystone Press Agency / Global Look PressДва крупных российских банка собираются устанавливать в «дружественных странах» свои POS-терминалы только для приёма карт «Мир»,сообщаетРБК со ссылкой на собственные источники. Названия банков при этом не раскрываются. Начать установку терминалов один банк планирует в Турции, другой — в Турции и ОАЭ. В первую очередь это коснётся туристических мест, таких как отели и крупные магазины.Согласно данным РБК, приём платежей при установке за границей собственных терминалов возможен по двум схемам:Банк-эквайер заключает договор с посредником (платёжный провайдер, предприниматель и не только), посредник заключает контракт с магазином или отелем (ТСП), где устанавливает POS-терминал. Деньги покупателей поступают на счёт посредника в банке-эквайере. Посредник конвертирует полученные рубли в нужную валюту и перечисляет их на расчётный счёт продавца. За такие услуги посредник может взимать с продавца комиссию.Магазин или отель оформляет доверенность на посредника, который обращается в российский банк-эквайер, открывает там рублёвый счёт для ТСП и заключает с банком договор эквайринга от его имени, затем забирает POS-терминалы и устанавливает их в ТСП.28 октября этого года глава Центробанка Эльвира Набиуллинасообщила, что в условиях опасений вторичных санкций при использовании платёжных инструментов РФ ЦБ работает над различными альтернативами, позволяющими пользоваться «современными методами оплаты» туристам из России за границей. Дело в том, что за последние три месяца от обслуживания карт мир отказались властиШри-Ланки, банкиКыргыстана, Турции и не только.В сентябре президент Турции Реджеп Тайип Эрдоган по итогам совещанияпоручилсовместно с партнёрами из России разработать альтернативу «Миру». Незадолго до этого ряд отелей в Турциипересталпринимать карты «Мир» по указанию местного Центробанка. 19 августа два частных турецких банка, Denizbank и Isbank,приостановилисотрудничество с платёжной системой «Мир» после расширения санкций в отношении России и добавления гендиректора НСПК (оператора «Мир») Владимира Комлева в санкционный список."}, {"user_id": 1, "title": "Японская компания планирует представить «стиральную машину» для людей в 2025 году", "description": "Японская компания Science Co. Ltd., производящая насадки для душа и другие схожие товары,планирует п", "category_id": 5, "active": true, "is_deleted": false, "created_at": "2022-10-28T16:11:56.000Z", "updated_at": "2022-10-28T16:11:56.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/99e/5cf/69d/99e5cf69da4f7e811b7215398d8509c6.jpeg", "content": "Японская компания Science Co. Ltd., производящая насадки для душа и другие схожие товары,планирует представитьв 2025 году на выставке в Осаке проект Project Usoyaro — «стиральную машину» для людей. В работе над идеей авторы вдохновлялись представленной на всемирной выставке в Осаке в 1970 году закрытой ультразвуковой ванной компании Sanyo Electric.В отличие от «предшественника», новую ванную обещают снабдить набором датчиков и системой с ИИ, отслеживающим пульс человека и другие показатели жизнедеятельности. Это необходимо для обеспечения комфортного пребывания в ванной. Кроме того, судя по представленному концепту, в ванной будет установлена панель и динамики для воспроизведения видео и звука.Всё это, по словам компании, должно предоставить пользователю возможность не только помыться, но и хорошо отдохнуть после тяжёлого дня. Весь процесс мытья и массажа будет занимать около 15 минут.Модель Sanyo Electric так и не вышла на рынок. Но, несмотря на это, Science Co. Ltd. решила улучшить и возродить идею. К 2025 году должен появиться уже готовый рабочий образец для демонстрации в Осаке. Тогда же компания планирует начать продажу своих ванн."}, {"user_id": 1, "title": "Wi-Fi в институте | Подготовительный этап, часть первая", "description": "Приветствую, инженер!Меня зовут Артём Ковальчук, я сетевой инженер системного интегратора X-Com, вхо", "category_id": 4, "active": true, "is_deleted": false, "created_at": "2022-10-31T10:46:41.000Z", "updated_at": "2022-10-31T10:46:41.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/c75/179/59f/c7517959fedc7c548d3739be2c104b16.png", "content": "Приветствую, инженер!Меня зовут Артём Ковальчук, я сетевой инженер системного интегратора X-Com, входящего в одноименную Группу компаний. За плечами относительно небольшой опыт в сетях и сертификат Cisco CCNA.Мы запускаем цикл статей, где я поделюсь опытом, как выглядит живой проект по беспроводным сетям передачи данных, с учетом того, что беспроводные технологии - не ваша основная специальность, но вас это интересует. Иными словами, будет максимально подробно.Цель цикла - собрать в одном месте информацию о том, как работать в рамках подобного проекта. Что понадобится учесть на начальном этапе, какой нужен инвентарь, где найти теорию, детали проведения пусконаладочных работ, как составляются отчеты, где задавать вопросы и т.д.Статья будет полезна инженерам интеграторов, которые строят Wi-Fi сети, так и инженерам, занимающимся обслуживанием беспроводных сетей.Немного терминов и сокращений, используемых в статье:AP (Access Point) - APБСПД – Беспроводная сеть передачи данных (он же Wi-Fi)ПНР – Пусконаладочные работыEkahau Sidekick ESK-1 - СайдкикРадиообследование == Site Survey, по смыслам это одно и то же, просто где-то удобнее использовать англоязычный вариант, где-то русскоязычный.Подготовительный этапОбъект:7-ми этажный главный учебный корпус (ГУК), Московского Авиационного Института (МАИ)Общая площадь:~35тыс.кв.м.Задача:Провести радиообследование текущей БСПД, спроектировать модель новой сети и выполнить ПНР с последующим финальным радиообследованием и отчетом.На объекте уже частично присутствовала БСПД сеть на основеCisco. Текущие реалии диктуют свои правила, поэтому заказчик решил заменить оборудование наQtech.Важный факт: условия по вендору и количеству точек продиктовано заказчиком. На момент нашего включения в работу, уже была реализована закупка. Это стартовые рамки, в которых мы обязаны работать.\"ПочемуQtech? Потому чтоEltexне согласились.\"Кейсов по внедрению БСПД на Qtech (Yuncore) я не нашел, поэтому берем фонарик и отправляемся на темную территорию OEM-оборудования.Проект состоит из следующих этапов:Проведение первичного радиообследования.Моделирование покрытия новой сети Wi-Fi.Монтаж СКС.Пусконаладочные работы.Финальное радиообследование.Техническое заданиеПервое, что необходимо сделать - составить грамотное ТЗ, которое будет описывать требования к будущей сети. Без этого документа, у вас с заказчиком обязательно возникнут разногласия в понимании ситуации, на урегулирование которых уйдет значительное количество времени и сил.На тему ТЗ всячески советую ознакомиться состатьейМаксима Гетмана (CWNE#364)ГУК (Главный учебный корпус) - это достаточно крупный учебный корпус, где ведется основной учебный процесс института. Wi-Fi сеть планируется использовать для организации единого информационного пространства мобильных пользователей внутри существующего здания ГУК, позволяющего обеспечить передачу данных и организовать совместный доступ к внутренним и внешним ресурсам сотрудников и студентов.БСПД должна состоять из трех ключевых компонентов:Точки доступа, поддерживающие протокол 802.11ac.Контроллер.Система управления и мониторинга.БСПД должна соответствовать следующим требованиям:Обеспечение достаточного (не менее -70дБм) для высокоскоростного подключения типовых клиентских устройств, уровня сигнала на всей площади объекта, за исключением помещений, где покрытие не требуется.Обеспечить техническую возможность \"быстрого роуминга\". Под технической возможностью понимается уровень приема второй по мощности AP не менее -75дБм на типовом клиентском устройстве.Обеспечить минимальный уровень пересечения каналов в диапазонах 2.4/5ГГц. Для 2.4ГГц - не более 3 AP на одном канале, для 5ГГц не более 1 AP.Емкость сети изначально не рассчитывалась, но мы исходили из 800 одновременных пользователей на всю сеть. Не более 30 на одну AP и распределение 75/25% по диапазонам 5ГГц/2.4ГГц.Два SSID: корпоративный с авторизацией по доменным учетным записям через протокол RADIUS и открытый гостевой Wi-Fi.Определившись с требованиями, необходимо выбрать производителя, чье оборудование оптимально под них подходит. Учитывая достаточное количество ограничений как на РФ в целом, так и на сам МАИ в частности, выбор был небольшой. Заказчик выбирал междуEltexиQtech, но, по ряду причин остановился на втором.Характеристики точки доступаСеть предлагалось построить наQtech QWP 65 AC-VC. Пара фотографий для наглядности:Отдельное удовольствие - подключить кабель в PoE разъем! Расстояния хватает только на коннектор, а кабель упирается в стенку крышки и идет на изгиб.Сразу заглянем внутрь:Для желающих рассмотреть поближе, эти фотографии можно найти поссылке.AP Qtech далеко не отечественного производства. Это OEM AP Yuncore, от компании Yunlink. Конкретно эта модель - OEM AP XD6800. Тестовую AP мы основательно не разбирали, поэтому вторая картинка - XD6800.Внутри имеем: 4 антенны 5 дБм MIMO, расположенных на стенках корпуса  и плата с радиатором, который закрывает чипсет Qualcomm IPQ4019+QCA9886+QCA8075.Основной чипсет - Qualcomm IPQ4019 в реализации WiFi SoC (Wi-Fi system-on-chip).Это 4-х ядерный ARM процессор, с поддержкой функции Wave-2 802.11ac. Дизайн сочетает в себе комбинацию dual-band 2.4/5ГГц. Изображение архитектуры процессора, для наглядности.Картинка взята из даташита, размещенного наgithub.Следующий SoC чип – QCA9886, Single-Band 2x2 с технологией SS MIMO, который отвечает за еще один диапазон 5ГГц. Именно поэтому наша точка умеет в dual-band 5ГГц. Каждый из трансиверов отвечает за свой набор частот (каналов). Каналы разделены между двумя трансиверами следующим образом: На первом: с 36 по 64, На втором: с 132 по 165.Закрывает это трио - чип контроллера QCA8075, с поддержкой 10/100/1000 Мбит/c, который, как я понял, отвечает за парсинг кадров на физическом уровне. Так называемыйPHY чип.Даташит на чип можно найти наgithub.AP позиционируется как внутренняя всенаправленная (Omni), дальнейшие замеры, с помощью сайдкика, как ни странно, это косвенно подтверждают.Как было сказано выше, AP имеет три радиомодуля 2.4ГГц и два 5ГГц. Два реализованы на процессоре, один отдельным чипом.Web-интерфейс точки доступаПитание стандартное, по PoE (IEEE 802.3at, 48 В)Я не специалист в схемотехнике, поэтому с характеристиками мы закончим. Если вам есть что добавить, пишите об этом в комментариях, с удовольствием почитаю.Модель AP имеет индекс \"VC\" - AP предназначена для работы только с контроллером Qtech. Для работы без контроллера есть отдельная модель, без индекса \"VC\".Для обследования были предоставлены две AP и доступ к виртуальному контроллеру Qteсh.Интерфейс контроллера QWC-VC, с которым нам предстоит работать, у Qtech выглядит следующим образом:Реализация программная, по рекомендациям, ставится на Ubuntu Linux (минимум 20.04). В проекте под него запланирован отдельный физический сервер.В одной из частей разберем его возможности, установку и настройку подробнее.Кроме AP, контроллера и лицензий (на каждую AP отдельно) в поставку входят коммутаторы Qtech (L3/L2):PoE QTECH QSW-4610-10T– коммутаторы доступа.QTECH QSW-6300-32F– коммутаторы агрегации.QTECH QSW-6910-26F– коммутатор ядра.ИнвентарьС AP определились, закупка проведена, пока поставка в пути, можем переходить к ревизии инвентаря. Вот списокминимальногокомплекта, без которого будет крайне трудозатратно вести работы, а результаты будут далеки от точных:ПО для Site Survey.Спектроанализатор.Ноутбук/планшет.Стойка+рамка-стенд (для метода APoS, подробнее остановимся в следующих частях).АКБ с PoE (или сборный аналог).Лазерный дальномер.4-м витая пара.На фотографии представлен весь комплект:Вес (вместе с ноутбуком) ~6кг:Пройдемся по каждому отдельно, тут есть пара важных моментов и замечаний.СпектроанализаторГлавный инструмент качественного Site Survey –  это адаптеры и спектроанализатор.Мне крайне повезло, у нас в компании оказалась модель Ekahau Sidekick ESK-1, почему мы и решили взяться за этот проект. Все благодаря коллеге, который пол года назад сделал выбор в пользу Ekahau и продвинул эту идею руководству.На тему спектроанализаторов и адаптеров, я могу говорить только в контексте Ekahau Sidekick т.к. ничего больше не доводилось использовать. Дорогое удовольствие, цена около 2000$.Сейчас его можно найти наebay, цена от 70-140тыс.р (~1000-2000$)Конечно же есть нюанс, доставку в РФ вы вряд ли там найдете. Придется просить коллег из зарубежных далей (уверен, найдутся те, кто сможет помочь), либо использовать собственные знакомства.Неутешительная истина в том, что кроме сайдкика, в сносный спектральный анализ умеет толькоWi-Spy DBx, но он крайне проигрывает в детализации и скорости.Если вам нужно объяснение, почему именно сайдкик сейчас так хорош, вот пара тезисов:У него своя батарея, а это значит, что батарея ноутбука проживет значительно дольше во время активной работы.Детализация измерений и скорость замера сигнала.Все необходимое в одной маленькой коробочке, весом в 1кг.Этих трех пунктов уже более чем достаточно, проверено на практике. Работать с сайдкиком удобно и просто.Цена кусается, но если подумать, окупается за 1-2 проекта. Для примера: цена сайдкика - 2000$, переведем по старому курсу для наглядности (1$~70р) получим стоимость сайдкика в 140тыс.р. Цена одной APQWP 65 AC-VC(а ведь в ней даже нет поддержки стандарта 802.11ax!) - 40тыс.р. Простая арифметика говорит нам о том, что покупка сайдкика равна покупке 4 AP, а в проекте их 256!Про сайдкик, сравнение с Wi-Spy DBx и другие аналоги, рекомендую еще однустатьюМаксима - об инструментах проектирования БСПД.Именно поэтому сейчас сайдкик плотно занял нишу короля Site Survey. (Если данные не точны, напишите об этом в комментариях, тема актуальная).Важный факт: сайдкик не работает как обычный адаптер. В нем используется проприетарный поток данных. Поэтому его можно дружить только с ПО Ekahau. А вот другие адаптеры с ПО Ekahau использовать можно.Напомню, что без сайдкика ваш ноутбук будет выглядеть примерно так:(фото Максима Гетмана)Ekahau уже анонсировали новомодныйSidekick 2, по отзывав зарубежных коллег, пока новинка пестрит багами, которых в первой версии не наблюдается.Дизайн выглядит крайне футуристично!Кроме дизайна и багов, получаем три диапазона, быстрейший спектроанализатор, куча антенн и активное охлаждение. А вот потратиться на новинку пока не выйдет, на сколько мне известно. Вспоминаются разговор коллеги с пресейлом Ekahau:— Купите сайдкик 2?— Да, а в Россию привезёте.— Нет. А может, с доставкой за рубеж, а потом вы сами?— Может быть. А работать будет?— Нет, у вас же нет обновления на 11.— А в чём тогда смысл?— Ну да. Всего доброго.А пока WI-FI инженеры вожделеют второй сайдкик, вот вам фотография Sidekick ESK-1 внутри:(фото взято из телеграм-группы Ekahau-Rus & Wireless Co)ПО для Site SurveyМоделировать мы будем в ПО Ekahau Ai Pro 11.1 (ранее Ekahau Site Survey Pro).Ekahau Ai Pro заточена под работу с сайдкиком, да, но она также переваривает и другие адаптеры (например, крайне был удивлен, когда увидел в обнаруженных девайсах адаптер ноутбука).Но без дополнительного адаптера не обойтись т.к. нам нужна работа на прием. Без подключенного сайдкика, интерфейс с анализом спектра выглядит так:Интерфейс на манер известной программы InSSIDer. Список AP, уровень сигнала в дБм и занятость каналов.Тут же можно посмотреть, какой адаптер активен, программа предусмотрительно разделяет сайдкик и другие адаптеры.Совсем другое дело, когда подключаешь сайдкик. Тот же интерфейс с подключенным сайдкиком:На меня это произвело впечатление! А вот так сейчас выглядит список адаптеров:Единственный нюанс: программа при входе требует авторизации в облаке. Само ПО работает, если у вас осталась лицензия, но плюшки от подписки уже нет.А это значит Ekahau Packet Capture (заменить адаптером + Wireshark) и Site Survey с Iphone (смириться), облако для обмена проектами (использовать внутренний SSD сайдкика) - отпадает. Если лицензии совсем нет, то...покажите мне инженера, который не любит ром!Ноутбук/ПланшетОдин из основных инструментов радиообследователя. Тут я не берусь утверждать, какой конфигурации железку брать, приведу характеристики моего Lenovo Thinkpad L380Core i5-8250U 1.80ГГц12ГБ RAMLi-Po батарея на 4000mAh (хватает на 8 часов работы)вес 1,46 кгWindows 10 (21H1)2018 г. выпускаПо начинке (процессор + RAM) этой конфигурации хватает с головой для такого проекта как в МАИ (~35тыс. кв. м). Расчет визуализаций, выгрузка схем, планирование каналов и т.п. не приводит к зависанию/медленной работе/вылету ПО.Батарею лучше проверить заранее, если ноутбук уже эксплуатируется некоторое время.Вес - важная характеристика устройства т.к. вам придется ходить с ним очень много. Если ноутбук хотя бы 1.46кг, первые пару дней руки гарантировано будут болеть. Именно поэтому некоторые коллеги используют ноутбуки Microsoft серии Surface.Выбор операционной системы - клиент Ekahau Ai Pro есть только под Windows/Mac (либо смартфон, но для этого нужна облачная подписка, а она, как вы уже поняли, не работает в РФ), поэтому использовалась Windows 10 (билд 21H1 с последними обновлениями).Хочу отметить, что Ekahau Ai Pro работает и через виртуалку на той же Ubuntu, например. Сайдкик корректно определяется через проброс USB в виртуалку.Очевидные проблемы - Lenovo не вывозил подобный стенд. Были как проблемы с производительностью, так и с навигацией внутри программы (то тачпад отвалится, то после гибернации ПО зависнет и т.п мелкие неурядицы).Поэтому после завершения первого проекта, я переехал на Windows 10 и, как показала практика, это было правильным решением.Стойка и рамка-стендНеотъемлемая часть метода APoS (Access Point on Stick) – стойка с закрепленной на ней рамкой, к которой монтируется AP. Выбирать рекомендуется телескопический штатив (лучше всего подходит фотоштатив или стойка для светоаппаратуры)Мы выбрали стойку Manfrotto 1004BAC, конечно же, с Авито.Удобная широкая тренога, точка не шатается на максимальной высоте.Пневматическая, открутил винты и не нужно ловить точку, после того как та полностью отдаст себя гравитации.Раскладывается до высоты 3.6м.Вместе со стойкой была куплена рамка-стенд, для монтирования AP под потолок.В связке можно вытворять весьма полезные вещи, например:APoS с помощью стойки и рамки-стенда, высота ~3.2мТакие рамки печатает на 3D принтере один хороший человек, вотссылкана рамку, кому-то точно будет полезно. Константин, спасибо!У AP Qtech плоская монтажная площадка с отверстиями под саморезы, поэтому на рамке мы ее закрепляли стяжками, дешево и сердито.АКБ с PoEОчередной инструмент, без которого не обойтись. Это может быть как новомодный АКБ The Accelerator Site Survey Battery Pack V1, который нам удалось урвать у КомпТЕКа (с косметическим дефектом, но не страшно), который совмещает в себе собственно аккумуляторную батарею и PoE-инжектор для питания точки без наличия розетки рядом.АКБ поставлялся в чехле с ремнями, поэтому его крайне удобно повесить на стойку.Тот самый косметический дефектИнтерфейс у АКБ простой: отображает процент заряда батареи и ее вольтаж. Полная зарядка за 4 часа, хватает на активный рабочий день (~8 часов).Чехол в комплекте попался под вторую модель, пришлось подрезать.Разъемы на разные варианты PoE, так же слева расположен USB-A, 5V, для зарядки смартфона, например.Если такой штуки не нашлось (наша была последней в Москве, по известным причинам), можно заменить составными девайсами, а именно:Внешний АКБ (на фото greenworks от дрели).конвертер DC-DC (по центру).PoE инжектор.Общая цена недостающих частей (не считая сайдкика и ноутбука – они у нас были) ~ 45 тыс.руб. По части АКБ,  составным вариантом вместо фирменного нафаршированного АКБ выйдет еще дешевле.Если вы работаете в рамках проектов, то это, а так же цена сайдкика – малая цена за те плюсы, которые даст вам подобный комплект.Для примера, комплект снаряжения может разрастись и до таких масштабов.Фотография взята изблогаодного wi-fi инженера, по той же ссылке можно ознакомиться с подробным описанием всех предметов.ТеорияЕсли вы, как и я, попали в беспроводные технологии по счастливой случайности, то вот пара источников, где черпать информацию:Крайне полезный сборник по теории и инструментам от Evil Wireless чата,github.Опыт подготовки к CCNA говорил мне, что хорошим тоном будет взять за основу что-то похожее на учебник CCNA от Cisco Press. И да, такой учебник есть и по беспроводке - CWNA David Coleman/David Westcott , так оно и оказалось, рекомендую.Альтернатива на русском (как я понял, чуть ли не единственная) - Технологии современных беспроводных сетей Wi-Fi, под редакцией А.В. ПролетарскогоКрайне полезныйблогвсе того же Дэвида Колмана (David Coleman)Исследованиепо проницаемости различных конструкций в диапазонах 2.4/5ГГц.Так же можно зайти в моюгруппув телеграм, там будут ссылки на мои изыскания в контексте различной литературы и прочих полезных вещей, искать по тэгу #Wireless.С вопросами, с которыми не помог справиться гугл, можно обратиться к коллегам из чатаEvil Wireless. А за помощью по технической части работы с Ekahau есть чатEkahau-Rus & Wireless Co.Перед тем как задавать вопрос, воспользуйтесь поиском по группе, возможно, ваш вопрос уже поднимался ранее.Можем работать?С производителем и точкой доступа определились, инвентарь собрали, где искать теорию тоже знаем. Осталось затребовать у заказчика исходную документацию, без которой никак.Нам требуются актуальные планы всех этажей объекта. «Актуальные» тут не ради красивого результата (хотя, для него в том числе), но в первую очередь для удобства инженера.По этим планам будет необходимо четко ориентироваться в помещениях, коридорах, холлах, лестницах и т.п. А это значит, нам не подходят неактуальные чертежи и чертежи низкого разрешения.В идеале, если у заказчика есть планы в dwg формате, Ekahau Ai Pro пережевывает их на раз, позволяет установить нужные слои и по ним, самое приятное, отрисовать ограждающие конструкции для расчета величин затухания сигнала в модели.Но, как это часто бывает, дадут вам оцифрованные чертежи (когда-то кем-то начерченные от руки карандашиком) в формате PDF и это все, что у вас будет.Вот теперь ,наконец, открываем Ekahau Ai Pro!Подгружаем наши планы (1), выставляем масштаб (2). Удобнее это делать по длинным размерам (длина большой комнаты, например или коридора).Выставляем Alignment floor pont:Это необходимо сделать в одинаковых точках на всех этажах. Используется для увязки между собой всех этажей и собираем из этого Здание (3). Это позволит нам корректно моделировать межэтажные затухания сигнала, пересечение каналов и т.п.Важно следить за параметром (4), если он отличен от \"OK\", следует откорректировать масштаб и проверить Alignment floor point.Стоит добавить, что по хорошему, перед тем как начать работать с программой мы должны были провести математические расчеты, которые позволили бы нам теоретически прикинуть количество точек на объект. Но т.к у нас по ним ограничение, то отталкиваемся от него. А вам я рекомендую посмотреть две части лекции по работе в Ekahau в двух разных локациях от инженеров КомпТЕК с канала Шапочки из фольги (офис и склад).Часть 1,Часть 2.Получив все необходимое от заказчика, согласовываем дату выезда на первичный осмотр. Вы же не думали верить на слово заказчику, что у него ТОЧНО все чертежи актуальные? Вот и мы нет.Подробнее про радиообследование мы поговорим во второй статье цикла, где я затрону основные этапы радиообследования, метод APoS, разбор и сравнение результатов на основе полученных от сайдкика данных, пройдусь по основным визуализациям в ekahau. Также мы разберем, что делать, если диаграмма направленности для вашей AP – секрет фирмы, а в Ekahau Ai Pro вашей AP нет...Пара интересных статей, которые я нашел на Хабре, пока готовил свою:Как мы делали HD Wi-Fi на стадионе в Краснодаре на 34 тысячи человекБеспроводная сеть на особо охраняемом и особо экранированном фармзаводе кое-где в РоссииБабушки, аудиты и брутфорс — истории о безопасности Wi-Fi-сетейЕсли нашли неточность в формулировках/терминах или Вам кажется, что чего-то не хватает, обязательно пишите в комментарии, планирую их мониторить на протяжении всего цикла и немного после."}, {"user_id": 1, "title": "Защита web.config с помощью цифровых сертификатов в Windows и Azure", "description": "Поскольку утечки данных случаются в наши дни все чаще, крайне важно делать приложения максимально за", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T16:02:21.000Z", "updated_at": "2022-10-28T16:02:21.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/db2/bdb/992/db2bdb992e2a0f7025994fd40a997bbd.png", "content": "Поскольку утечки данных случаются в наши дни все чаще, крайне важно делать приложения максимально защищенными. Одной из основных областей, где можно найти бреши в защите, является файл web.config. Получив доступ к этому файлу, который обычно хранится в виде незашифрованного текста, злоумышленник затем может легко получить доступ к базам данных и множеству других ресурсов, как внутренних, так и внешних.Так было не всегда. Когда .NET был еще совсем молод, большинство приложений работали в рамках одного домена Windows. Обычно в файле web.config не нужно было хранить пароли; права доступа к базе данных предоставлялись непосредственно учетной записи пользователя, под которой работало приложение.Для нынешних приложений это больше не вариант. В современном мире распределенных систем базы данных и другие ресурсы часто работают за пределами домена Windows и даже могут контролироваться разными компаниями. В таких условиях правильное хранение паролей, токенов приложений и других идентификаторов системного уровня имеет очень важное значение.Представленная здесь техника не нова;Йоуни Хейкниеми(Jouni Heikniemi) рассказывал о ней еще в 2013 году, как и команда SQL Azure за три года до этого. Но с годами некоторые шаги перестали работать из-за устаревших инструментов и изменения пользовательских интерфейсов. Тем не менее, первоначальная концепция по-прежнему актуальна.Дополнительная защитаПрежде чем мы начнем разговор о конкретных методах, важно понять, что шифрование файла web.config — это только один шаг в комплексном процессе обеспечения безопасности приложения. Важно очень четко понимать, что оно защищает, а что нет.Чтобы от файла web.config была хоть какая-нибудь польза, приложение должно уметь его расшифровывать. Если вы будете хранить ключ дешифрования в файле неподалеку от файла web.config, очевидно, что злоумышленник просто получит доступ к этому в дополнение к файлу web.config. Встраивание ключа дешифрования в приложение немного усложняет работу злоумышленника, но с этим можно справиться, просто запустив декомпилятор на украденном коде вашего приложения.Цифровые сертификаты бывают разные. Они хранятся на уровне ОС, поэтому злоумышленники не могут просто взять и выудить их с жесткого диска. Если вы явно не разрешите это, их нельзя даже экспортировать с компьютера, на котором они находятся.Нельзя сказать, что это идеальное решение. Если злоумышленник может производить запись в каталог приложения, приложение может быть изменено для расшифровки и раскрытия содержимого web.config. Это означает, что вы должны заботиться о защите каталогов, содержащих код приложения, от записи. В идеале только ваш сервер сборки может производить запись в ваши каталоги приложений на рабочем сервере, но это уже выходит за рамки этой статьи.Другой проблемой является защита копий самого цифрового сертификата. Они нужны для настройки новых серверов, но во всех остальных случаях их следует хранить в какой-нибудь оффлайн-хранилище или другом безопасном месте. С другой стороны, вы все-таки можете делиться цифровыми сертификатами, но только в этом есть крайняя необходимость.Создание цифрового сертификатаЦифровые сертификаты состоят из публичного и приватного ключа. Они аналогичны сертификатам SSL/TLS, но являются самоподписанными, поскольку им не нужно удостоверять, кто создал зашифрованный файл. Раньше Windows-разработчики использовали makecert.exe, но этот инструмент уже устарел. (Его все еще можно найти в Windows SDK.)В наши дни правильным инструментом для создания сертификатов на компьютерах с Windows считается PowerShell. Чтобы создать сертификат, используйте следующие команды:ПРЕДУПРЕЖДЕНИЕ: Возможно, вам придется запускать PowerShell-команды от имени администратора.$cert = New-SelfSignedCertificate -Type DocumentEncryptionCert -Subject \"CN=DevConfig\" -KeyExportPolicy Exportable -KeySpec KeyExchange\n\nExport-Certificate -Cert $cert -FilePath \".\\DevConfig.cer\"\n\n$mypwd = ConvertTo-SecureString -String \"1234\" -Force -AsPlainText\n\nExport-PfxCertificate -Cert $cert -FilePath \".\\DevConfig.pfx\" -Password $mypwd\n\n$certКак вы могли догадаться сами из ее названия, командаNew-SelfSignedCertificateсоздает сертификат. В этом примере он называется “DevConfig”, но вы можете назвать его как хотите.Затем мы экспортируем сертификат шифрования в “.cer”-файл с помощью командыExport-Certificate. Это публичный ключ, используемый для создания зашифрованных файлов конфигурации.Следующие две строки позволяют нам экспортировать сертификат расшифровки в виде “.pfx”-файла с помощьюExport-PfxCertificate. Крайне важно, чтобы этот файл хранился в безопасном оффлайновом месте отдельно от пароля, который вы определили с помощьюConvertTo-SecureString. (И, конечно, вам следует заменить “1234” более безопасным паролем.)Для последующих шаговам вам потребуется узнать thumbprint сертификата. Последняя строка, “$cert”, сама по себе будет отображать thumbprint на экране. Thumbprint больше не считается секретом.Импорт сертификата шифрования в WindowsЕсли вы настраиваете машину, которая может шифровать, но не расшифровывать файлы конфигурации, тогда вам будет полезен этот шаг. В противном случае перейдите сразу к следующему.Import-Certificate -Filepath \".\\DevConfig.cer\" -CertStoreLocation cert:\\LocalMachine\\MyВ разделеImport-Certificateвы найдете больше информации.Импорт сертификата расшифровки в WindowsНа этом шаге будет фактически импортирован и сертификат расшифровки, и сертификат шифрования (также известные как публичный и приватный ключи).$mypwd = ConvertTo-SecureString -String \"1234\" -Force -AsPlainText\nImport-PfxCertificate -FilePath \".\\DevConfig.pfx\" -CertStoreLocation Cert:\\LocalMachine\\My -Password $mypwdЕсли вы импортируете сертификат с помощьюImport-PfxCertificate, то по умолчанию он не экспортируется. Это означает, что кто-либо другой не сможет экспортировать его с этой машины на другую. Хотя для продакшена так делать в принципе желательно, вы можете пометить его как экспортируемый для машин разработчиков.Вы можете использоватьсредство управления сертификатами, чтобы убедиться, что сертификат был правильно установлен.Импорт сертификата расшифровки в Windows AzureСертификат расшифровки недоступна в бесплатной версии Azure App Services. На момент написания этой статьи вам нужен как минимум уровень B1, который разрешает SSL-подключения.На портале Azure вам нужно найти вкладку “SSL Settings”. Затем нажмите кнопку “Upload Certificate” , чтобы указать сертификат. Затем вы должны увидеть его в нижней части экра:Далее вам нужно предоставить приложению ваши сертификаты. Это делается путем добавления ключа WEBSITE_LOAD_CERTIFICATES на вкладку “Application Settings”. Вы можете использовать несколько значений thumbprint’ов, разделенных запятыми, или можете установить это значение на “*”, чтобы предоставить все ваши сертификаты вашему веб-приложению.Защищенный поставщик конфигурацииШифрование и дешифрование обрабатываетсяProtectedConfigurationProvider. Тот, который  мы используем в этой статье, называется Pkcs12ProtectedConfigurationProvider. Первоначально он был создан корпорацией Microsoft, но в него были внесены незначительные изменения для совместимости со службами приложений Azure.ProtectedConfigurationProvider вставляет себя в конвейер чтения конфигурации, поэтому код вашего приложения на самом деле не должен знать об этом. Это полезно, когда вам нужна гибкость использования как зашифрованных, так и незашифрованных файлов конфигурации.Вы можетедобавить Pkcs12ProtectedConfigurationProvider непосредственно в свой проектили загрузить его с помощью NuGet-пакетаWebConfigEncrypter. В этой статье предполагается, что вы будете использовать NuGet-пакет.Подготовка файла web.config к шифрованиюПосле добавления в проект класса Pkcs12ProtectedConfigurationProvider вам потребуется подготовить файл web.config для шифрования.1. Добавьте этот раздел в свой файл web.config.<configuration>\n  [...]\n  <configProtectedData>\n    <providers>\n      <add name=\"Pkcs12Provider\" thumbprint=\"1234123412341234123412341234123412341234\" type=\"WebConfigEncrypter.Pkcs12ProtectedConfigurationProvider, WebConfigEncrypter\" storeLocation=\"LocalMachine\"/>\n    </providers>\n  </configProtectedData>2. Измените атрибут thumbprint, чтобы он соответствовал вашему сертификату.3. Если вы не используете NuGet-пакет, обновите атрибут type, чтобы он соответствовал полностью квантийицированному классу и имени сборки DLL-библиотеки вашегоProtectedConfigurationProvider.Шифрование строк подключения в файле web.configПрежде чем начать это делать, убедитесь, что у вас есть резервная копия файлаweb.config.В командной строке Visual Studio введите “where aspnet_regiis”. Затем скопируйте в эту папку следующие файлы. Это позволит инструментам командной строки aspnet использовать ваш классProtectedConfigurationProvider:WebConfigEncrypter.dllSystem.Configuration.ConfigurationManager.dllSystem.Security.Cryptography.Xml.dllЗатем запустите эту команду из той же папки, что и файлweb.config:aspnet_regiis -pef \"connectionStrings\" \".\" -prov \"Pkcs12Provider\"Ваш раздел зашифрованной конфигурации должен выглядеть примерно так:<connectionStrings configProtectionProvider=\"Pkcs12Provider\">\n    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"\n      xmlns=\"http://www.w3.org/2001/04/xmlenc#\">\n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes192-cbc\" />\n      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">\n          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />\n          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n            <KeyName>rsaKey</KeyName>\n          </KeyInfo>\n          <CipherData>\n            <CipherValue>Moy/a2XO2zvnn/HZW53DyC8aAJWo16+0KmnpC4SCSmuQZU0RT+HNFEA33pAGCzve+m6MTaRzhx6jVVRoAvpSNzfYG1bU1z7a1YnbW4OGxrmYYfdWW6cZQZ57dZnL6YSAlkJ5WlqPDGUPJa6FV/hTic3x4fJYy5vdSucmO6X3opuo1998LWNkL6fIS4WkjkG/SOFbI2Qx3HHogdN670jDHKNDON1z7bFHhLNyVj7RTO3xuQN9kF4PqbFtvwm1bYXTbZpdNxu/fcXZKONSAu8HN3QX5vTRyP/I4BG+NK7TUig3gxD4tq9GR7aSSGKJyt02PiCEO0JpyyIbHZ9xbck9kw==</CipherValue>\n          </CipherData>\n        </EncryptedKey>\n      </KeyInfo>\n      <CipherData>\n        <CipherValue>TeV0yJaFlEhpyZUlQoG7M3O7sfQ7uG3ndgmhxipOrwoEsrI+Zvt1NI7arefOFWGNW4CEaoLo4mKy2Kwr4ZgK+6rAwOmx1IRyheWtF7z/8+CiGOqSRXLyGEkDQBEVOWKU0Y6TaWtPu0ZM3bp5pvKaztBnthgGnrGYmigaufu5rZW1GWPtHyL2iWdAkU9iaf+AOpA/GSvoVtZmnfJ1rwy6U8PTO0h0Ws/PdkcOKuXGkx31t/Y32ivFoy7xYPnPt/Z/aNMiHvbO7faQAwuJ/NsG9G1FFRRHCqc73TUsRdKHVuf17BEp526RG6RBZtM3F3V3o0d8/sLmyrNI9tFfksB4qcWiN4P+BRtGr0iacmBfBOvAFSozfUYxjMpx+BYPOpD1pf4fMFoKxxKeJYY31XqZoQLp75RgmWhWYm8URHq4Cjs=</CipherValue>\n      </CipherData>\n    </EncryptedData>\n  </connectionStrings>Вот и все (для Windows IIS). КлючconfigProtectionProviderсообщит вашему приложению, какой класс дешифрования и сертификат использовать. Если это не сработает, повторно запустите описанную выше команду Import-PfxCertificate.Шифрование пользовательских разделов конфигурацииВ дополнение к строкам подключения вы можете зашифроватьпользовательские разделы конфигурации, созданные с помощью IConfigurationSectionHandler. Для этого необходимо скопировать библиотеку, определяющую пользовательский класс конфигурации, в ту же папку, что и aspnet_regiis, точно так же, как вы сделали сWebConfigEncrypter.dll.Убедитесь, что в своем списке configSections вы используете полностью квантифицированный класс и имя сборки для пользовательского класса конфигурации. Например:<configSections>\n    <section name=\"protectedSettings\" type=\"MyConfigSectionHandler.MyHandler, WebApplication1\" />\n  </configSections>Это необходимо дляaspnet_regiis, даже если в противном случае вы можете просто указать имя класса.Затем вы можете снова запустить команду шифрования, заменив параметр -pef именем раздела.aspnet_regiis -pef \"protectedSettings\" \".\" -prov \"Pkcs12Provider\"Особые рекомендации для Azure App ServicesAzure Поскольку службы приложений Azure хранят и предоставляют сертификаты для текущего пользователя, а не для компьютера, вам потребуется изменить атрибутstoreLocation, как показано ниже:<add name=“Pkcs12Provider” thumbprint=“1234123412341234123412341234123412341234\" type=“WebConfigEncrypter.Pkcs12ProtectedConfigurationProvider, WebConfigEncrypter” storeLocation=“CurrentUser”/>Перевод статьи подготовлен в преддверии старта курса C# ASP.NET Core разработчик. Приглашаем всех набесплатный урок курса, в рамках которого познакомимся с видами баз данных. Разберем как работать с реляционными и нереляционными базами данных - напрямую и через ORM. Регистрация доступна поссылке.Зарегистрироваться на бесплатный урок"}, {"user_id": 1, "title": "Sony представила беспроводные наушники LinkBuds S в корпусе из переработанного пластика", "description": "Sonyвыпустилабеспроводные наушники LinkBuds S в корпусе из переработанного пластика. Компания не ста", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T15:36:14.000Z", "updated_at": "2022-10-28T15:36:14.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/221/838/1ba/2218381ba99043894e1a302444e33abe.jpg", "content": "Sonyвыпустилабеспроводные наушники LinkBuds S в корпусе из переработанного пластика. Компания не стала менять характеристики устройства и изменила только материал корпуса.Серия LinkBuds S Earth Blue представляет собой обычные наушники LinkBuds S в экологичном корпусе, который изготовлен из переработанных офисных пластиковых бутылок. Также некоторые элементы устройства выполнены из вторично использованных автомобильных запчастей.Sony выпустила специальную серию наушников в знак стремления свести к нулю влияние на окружающую среду. Планируется, что этого удастся достичь к 2025 году. Также сейчас компания изучает, каким образом можно использовать переработанные материалы в современном дизайне.В остальном наушники сохранили все технические возможности обычных LinkBuds S. Компания заявляет, что это самые лёгкие беспроводные наушники с шумоподавлением. От одной зарядки LinkBuds S работают 6 часов, дополнительные 14 часов работы обеспечивает зарядный кейс. Также устройство оснащено активным шумоподавлением, режимом прозрачности и защитой от влаги по стандарту IPX4. Наушники Sony продаёт за 150 долларов."}, {"user_id": 1, "title": "РЖД подвёл итоги голосования за дизайн первого российского высокоскоростного поезда", "description": "Холдинг «Российские железные дороги» (РЖД)подвёл итогиголосования за дизайн первого отечественного в", "category_id": 5, "active": true, "is_deleted": false, "created_at": "2022-10-28T15:33:34.000Z", "updated_at": "2022-10-28T15:33:34.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/bad/115/28f/bad11528fbb5c0e24e282b3862906d04.jpeg", "content": "Холдинг «Российские железные дороги» (РЖД)подвёл итогиголосования за дизайн первого отечественного высокоскоростного поезда. В конкурсе участвовало три эскиза. С большим отрывом победил третий вариант с «динамичной трёхлучевой световой линией».  Он набрал 60.4% голосов.Ещё два эскиза.Согласно обещаниям РЖД, электропоезд будет перемещаться со скоростью до 360 км/ч. Для его разработки холдинг в 2019 году создал подразделение АО «Инжиниринговый центр железнодорожного транспорта». К созданию поезда привлекли более 300 научных и промышленных предприятий России.Ожидается, что проект будет завершён к 2028 году,сообщаетпортал «Новости Машиностроения» со ссылкой на пресс-службу РЖД. Сборка поезда должна начаться в 2026 году. Он разрабатывается для магистрали Москва — Санкт-Петербург. Поезд должен преодолевать расстояние между городами примерно за два часа."}, {"user_id": 1, "title": "Набиуллина: ЦБ работает над альтернативами платёжных инструментов для российских туристов", "description": "В условиях опасений вторичных санкций при использовании платёжных инструментов РФ ЦБ работает над ра", "category_id": 4, "active": true, "is_deleted": false, "created_at": "2022-10-28T15:13:22.000Z", "updated_at": "2022-10-28T15:13:22.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/89d/94a/dde/89d94adde62d9634d8b48a13f38195a4.jpeg", "content": "В условиях опасений вторичных санкций при использовании платёжных инструментов РФ ЦБ работает над различными альтернативами, которые позволяли бы пользоваться «современными методами оплаты» туристам из России за границей,заявилаглава регулятора Эльвира Набиуллина.«Действительно, у нас есть сложности, под влиянием санкций наши партнёры опасаются вторничных санкций, влияний на них при использовании платёжных инструментов. Но мы со всеми партнёрами ведём работу... пытаемся наладить разные альтернативные возможности для того, чтобы нашим гражданам, которые часто отправляются в туристические поездки, можно было пользоваться современными методами оплаты», — сказала она.Как ранеесообщалРБК со ссылкой на источники, два крупных российских банка рассматривают перспективу установки POS-терминалов для приёма карт платёжной системы «Мир» в дружественных странах. Речь идёт о Турции и Объединённых Арабских Эмиратах.Как ранееписала«Газета.Ru» со ссылкой на представителей Национальной системы платёжных карт, количество карт «Мир», которые выпустили российские банки, на 1 сентября 2022 года превысило 150 млн. По сравнению с данными на 1 июля этого года, показатель вырос на 11%. В течение 2022 года банки выдают россиянам около 5,3 млн карт «Мир» в месяц."}, {"user_id": 1, "title": "Приглашаем на первый DevOps митап от СберМаркет Tech", "description": "Привет! На связи tech-команда СберМаркета. DevOps — это культура или профессия? Правильный ответ: и ", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T15:07:27.000Z", "updated_at": "2022-10-28T15:07:27.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/fed/5d2/916/fed5d2916542e3a91241e2c881c4940d.jpg", "content": "Привет! На связи tech-команда СберМаркета. DevOps — это культура или профессия? Правильный ответ: и то, и другое (во всяком случае у нас открыто нескольковакансий). Решили собраться в онлайне и обсудить, как поддерживать стабильную работу высоконагруженных систем. Будет 3 выступления от спикеров из СберМаркета и Авито. После каждого из них традиционно дарим подарок за лучший вопрос 🎁Регистрируйся на митап можно поссылоке.В программе:Дмитрий Крапивин, руководитель группы базовой инфраструктуры в CберМаркете, расскажет, как мы учили On-prem Sentry обрабатывать 60 миллионов событий в сутки.Расскажу как мы в СберМаркете решали проблемы производительности on-prem Sentry — учили обрабатывать 60 миллионов событий в  сутки, для чего пришлось провести оптимизацию почти каждого компонента.Павел Агалецкий, ведущий инженер в Авито, расскажет как его команда построила надёжную межсервисную шину данных на основе Apache Kafka.Расскажу как мы в Авито построили надежную во всех смыслах шину данных для обмена событиями между сервисами на основе Apache Kafka: как мы гарантируем соблюдение контрактов публикуемых событий и способны переживать даже отказ дата-центра.Сергей Реусин, руководитель группы эксплуатации в CберМаркете, попробует ответить на фундаментальные вопросы о работе с инцидентами.Попробуем взглянуть на природу «надёжности» и, в частности, на инциденты с необычный стороны. Разберемся, во что в реальности превращаются практики работы с ними, а так же попробуем найти ответы на ряд фундаментальных вопросов, поставленных перед каждым из нас.Регистрируйся бесплатнопо ссылке. Количество мест в офлайне ограничено, поэтому не советуем не откладывать регистрацию, если захотели прийти. В онлайне места хватит всем :)Ждём тебя на митапе!Мы завели соцсети с новостями и анонсами Tech-команды. Если хотите узнать, что под капотом высоконагруженного e-commerce, следите за нами там, где вам удобнее всего:Telegram,YouTube."}, {"user_id": 1, "title": "«Умные» изобретения: подборка необычных и полезных патентов", "description": "«Умные» изобретения уже прочно вошли в нашу жизнь. Многие из нас используют умные часы, которые пока", "category_id": 5, "active": true, "is_deleted": false, "created_at": "2022-10-28T15:13:34.000Z", "updated_at": "2022-10-28T15:13:34.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/184/16c/c43/18416cc43ca3a1ca18d5840f02546fc9.png", "content": "«Умные» изобретения уже прочно вошли в нашу жизнь. Многие из нас используют умные часы, которые показывают не только время, умные колонки, с которыми можно даже поговорить по душам (привет, Алиса!), и другие девайсы, которые делают нашу жизнь удобнее и проще.В этой статье мы решили поделиться подборкой умных устройств от отечественных изобретателей, которые также заслуживают внимания.Умное логопедическое зеркалоОтличный пример технологий в нише товаров для детей сразу с двумя патентами:в варианте без компьютераи совстроенным компьютером. Устройство представляет собой интерактивное зеркало в корпусе с дисплеем, видеокамерой и динамиками. При запуске программ девайса на дисплей (зеркало) выводится изображение, в котором занимающийся ребенок также видит и себя. Вместе с персонажами в игровой форме можно отработать упражнения артикуляционной, дыхательной, пальчиковой гимнастики и исправлять дефекты речи.В устройстве используется зеркало Гезелла. Такое стекло за счет напыления частично отражает и частично пропускает свет. С более светлой стороны оно работает как зеркало, отражая изображение, а с более темной можно наблюдать за происходящим по ту сторону стекла.Умная зубная каппаИзобретение от коллектива аж из одиннадцати авторов. Заявка зарегистрирована под названиемУмная ортодонтия» — зубная каппа со светодиодами. Устройство предназначено для поддержания уровня гигиены полости рта. По запросу «умная ортодонтия» база «Онлайн Патент» выдает еще несколько изобретений:каппа с таймером и серебряными электродами,каппа с жидкокристаллическим термометром,соска-пустышка. Коллектив авторов немного различается, но можно сделать вывод о том, что над изобретениями работала одна команда.Умный шлагбаумСистема распознавания государственных регистрационных знаков, благодаря которой шлагбаум реагирует на номер автомобиля и открывается автоматически. Удобноерешениедля охраняемых территорий. При этом авторы позаботились и о распознавании машин экстренных служб — беспрепятственный доступ к въезду для них также предоставляется за счет ресурсов нейросети.Умная вентиляцияСогласно описаниюпатентаустройство состоит из наружной конструкции для сообщения помещения с атмосферой и системы труб с испарительной и конденсационной частями. Для возможности удаления конденсата горизонтальные части труб установлены наклонно.Патентообладателем по заявке на умное устройство для вентиляции помещений указан «Донской государственный технический университет». Наглядный пример того как наука влияет на прикладные технологии напрямую.Умная каскаИзобретение во благо охраны труда на производстве. Вумную каскувстроены датчики температуры, загазованности и напряжения магнитного поля, благодаря которым работник может своевременно получить сигнал об опасности и предпринять необходимые меры. Полезное решение для организации работ с риском выделения взрывопожароопасных газов от российского инженера.Если у вас есть идеи умных приборов — проверьте патенты в нашейбазе. Быть может, именно вы сможетепредложитьновое решение и улучшить образ жизни тысяч людей.Дарим скидку 4000 рублей при первом обращении на любую услугу onlinepatent.ruПромокод:LOVEHABR"}, {"user_id": 1, "title": "Криптографический протокол для безопасной связи — SSL. Мифы про платные сертификаты", "description": "Браузеры периодически проверяют качество сертификатов, если есть нарушения, то происходит несовмести", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T15:44:03.000Z", "updated_at": "2022-10-28T15:44:03.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/2c2/98e/6f2/2c298e6f2e87cf1932be71b4d22d239f.png", "content": "Браузеры периодически проверяют качество сертификатов, если есть нарушения, то происходит несовместимость, как говорится, не сошлись характерами, а далее развод и каждый при своем, вы с неподходящим сертификатом и браузер вам ничего не должен, а в результате - крах надежд и потеря времени. Поэтому критически важно быть уверенным в достоверности приобретенного вами криптографического протокола.Let’s Encrypt. Проверенная и надежная организация, которая выдает бесплатные SSL. Проект поддерживают материально многие крупные IT-компании, чтобы интернет стал безопаснее.GlobalSign by GMO. Один из самых крупных сертифицированных центров. GlobalSign выпускают SSL-сертификаты с 1996 года. Центру доверяют такие компании, как Microsoft, Netflix, Airbnb.Sectigo(бывшийComodo). Также один из самых авторитетных центров для получения сертификата. Внимание, на данный момент не работает на территории РФ и РБ.Symantec. Компания выпускает большое количество продуктов для IT-сферы, которые признают по всему миру, уже около 30 лет. Не выдают сертификаты пользователям из РФ.Однако самый надежный и простой способ - приобрести его у вашего хостинг-провайдера. Это сэкономит вам время, нервы и даст надежду на безопасное будущее. Ведь процесс подключения ваших клиентов по безопасному соединению занимают миллисекунды, а подпорченная репутация - недоверие к вашему сервису запоминается на долгие годы.Разберемся, как завоевать мир не привлекая внимание санитаров или подключаем SSL сертификат правильно.Какие бывают типы проверки SSL-сертификата и чем они отличаются?DV-сертификаты(Domain Validation). Данный сертификат подтверждает владение доменным именем. Заказать его может как физическое, так и юридическое лицо.Выпуск осуществляется достаточно быстро, на все про все 10-15 минут.OV-сертификаты(Organization Validation). Данные сертификаты выдаются исключительно для юридических лиц. Центр сертификации проверяет являетесь ли вы владельцем домена, а также проверяет реальное существование организации по данным из открытых источников b2b либо государственных реестров.Выпуск такого сертификата может занимать от 1 до 3х дней.EV-сертификаты(Extended Validation). Являются самыми надежными сертификатами. Получить их могут исключительно юридические лица, а для валидации необходимо будет предоставить расширенный пакет документов. Контрольной проверкой будет звонок специалиста удостоверяющего центра на городской контактный номер телефона организации.Также EV-сертификаты отличаются наличием зеленой адресной строки, где будет фигурировать название компании. К примеру, именно такими сертификатами пользуются банки для защиты данных своих клиентов. Выпуск EV сертификата занимает до 14 дней.На примере нашей компании расскажем как произвести заказ и как пройти валидацию того или иного типа сертификата.Доступные сертификатыПосле оплаты заказа вы получите письмо на электронную почту, где необходимо пройти активацию сертификата, для этого можновоспользоваться инструкцией.Активация в личном кабинете происходит в несколько этапов:Генерация CSR запросаВвод контактных данныхСледующий шаг для (DV, OV, EV сертификатов) это валидация доменного имени.При необходимости можновоспользоваться инструкцией.После того, как сертификат будет валидирован удостоверяющим центром на вашу контактную почту будет отправлен сам сертификат и цепочка сертификатов.На этом получение  DV сертификата закончено, осталось его установить.Для сертификатов типа OV и EV валидация продолжается.Чтобы пройти валидацию юридического лица необходимо:Для компаний РФ необходимо предоставить номер ИНН / ОГРН или выписку из ЕГРЮЛ;Ссылки на открытые b2b базы данных, где будет фигурировать полное наименование компании, юридический адрес, городской номер телефона.Также производитель имеет право запросить DUNS номер ( на данный момент это происходит достаточно редко)Если компания отсутствует в каталоге D&B, в этом случае необходимо выполнить процедуру получения DUNS номера.В России есть представительство Dun & Bradstreet - «Интерфакс — Дан энд Брэдстрит», которое может помочь получить DUNS номер.На основании информации, полученной из открытых источников, производитель имеет право изменить название организации на соответствующее публичной информации. При этом высылается электронное письмо с просьбой подтвердить изменение данных.В случае если данные не могут быть заполнены или подтверждены, производитель имеет право отказать в выпуске сертификата.Завершающим этапом является валидационный звонок указанному контактному лицу с  несколькими вопросами об организации (уточнение названия организации, фамилии и имени контактного лица, доменное имя, а также подтверждение заказа сертификата). Звонок осуществляется поставщиком на английском языке.После валидации вам будет отправлено электронное письмо с сертификатом.Для установки сертификата на сайт вы можете связаться с нами либовоспользоваться инструкцией.Как проверить установлен ли SSL-сертификатС помощьюэтого сервисавы сможете сделать проверку установлен ли на вашем сайте SSL сертификат.В сервисе будет указана информация: какой SSL сертификат установлен на ваш сайт, поставщик SSL сертификат, срок до которого действует сертификат, а также другие технические детали. Для начала проверки вам необходимо ввести в поле \"Server Hostname\" название вашего сайта и нажать кнопку \"Check SSL\".Изречения из интернета и суждения тех, кто продает SSLПостулатРассматривая, чем бесплатный SSL-сертификат отличается от платного, помимо очевидной экономии, нужно отметить срок их действия. Бесплатные сертификаты действуют сравнительно недолго, и требуют постоянного перевыпуска. Например, популярный сертификат Let`s Encrypt нужно заново выпускать каждые три месяца.РеальностьПравда в том, что оба сертификата выглядят равнозначно, и у бесплатного даже больше преимуществ, т.к. его можно поставить в один клик.ПостулатТакже следует обратить внимание на уровень гарантий. Удостоверяющий центр, выпускающий бесплатный сертификат, не несет ответственности за добросовестность ресурса, где тот установлен. Платные цифровые подписи (OV) напротив, дают возможность проверить владельца сайта. Наличие таких гарантий формируют высокое доверие к сайту у пользователей и в поисковых системах.РеальностьНо по факту, никто не смотрит и не проверяет это.Это больше маркетинг для тех, кто продает такие сертификаты.ПостулатЕще одно существенное отличие платных сертификатов от бесплатных — наличие у них финансовых гарантий. В случае утечки пользовательских данных с ресурса, где установлен платный SSL-сертификат, пострадавшая сторона получит компенсацию от центра сертификации. Сумма финансовых гарантий зависит от конкретного вида сертификата.РеальностьНо по факту, еще не было таких судов, т.к. доказать взлом SSL сертификата - практически невозможно.ПостулатУстановка бесплатных сертификатов связана с решением ряда технических задач, что требует определенных навыков.РеальностьСамому без знаний linux установить такой сертификат на сервер и настроить автоматический выпуск - будет сложновато.ПостулатБесплатные сертификаты, тем не менее, обладают ключевым преимуществом — доступностью. Их часто используют низкобюджетные проекты, стартапы и частные лица, которые не могут позволить себе платные.РеальностьНу или просто умеют их ставить ;)"}, {"user_id": 1, "title": "React Native is better than Flutter*", "description": "*...and it is not true.Так, по мнению DALL-E, выглядит битва Flutter и React Native (RN - справа)При", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T17:03:26.000Z", "updated_at": "2022-10-28T17:03:26.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/096/59c/009/09659c009724a8da5509a4c11bdc1d63.png", "content": "*...and it is not true.Так, по мнению DALL-E, выглядит битва Flutter и React Native (RN - справа)Привет! Совсем недавно мой друг, и по совместительству - React Native разработчик, поделился со мной однойстатьей, про React Native[RN]и Flutter[FL]. Там подробно объясняется, почему RN лучше FL, но делается это в формате \"сравнения\". На самом деле, конечно, эта статья - никакое не сравнение, а попытка показать RN в лучшем свете, чем он есть на самом деле, а также привнести некоторого скепсиса по поводу FL.Чтож...я написал своему другу короткий (в сравнении с этой заметкой) ответ, но меня гложило чувство несправедливости. \"Как вообще можно сравнивать эти две технологии? Это как сравнивать лошадь из 18 века и самый самый современный автомобиль - и на том и на другом можно доехать до точки назначения, но путь, который вы проделаете, будет отличаться разительно\". Поэтому я и решил написать данную статью - рассказать своему другу (и всем сомневающимся) в таком формате, почему именно ему стоит слезть со своей JS-иглы и присмотреться к \"вражеской\" технологии.Также, перед прочтением данной статьи я очень рекомендую вам прочитать статью, с которой все началось. Так как я буду обращаться к пунктам из оригинальной статьи, используя их как единую логическую опору.DisclaimerПрежде чем начать, я напишу несколько важных дисклеймеров - я не испытываю никакой неприязни к JS или React, ровно как и к React Native или людям, которые используют эти инструменты. Также, я не имею ничего против автора оригинальной статьи - у всех людей свой вкус, в том числе и в технологическом выборе. Также, я попрошу человека из Facebook или Microsoft, который будет читать эту статью, рассматривая мою кандидатуру на предмет трудоустройства в их компанию - не принимать все тут написанное близко к сердцу, и последнее - я абсолютный фанат Flutter, я создаю классные приложения на нём с 2018 года и делаю это с огромным удовольствием. Я очень люблю этот инструмент и те возможности, что он дает, поэтому я не могу быть объективным на 100%, но я постараюсь аппелировать только к фактам (но буду позволять себе иногда съязвить - проронив колкую шутку). Теперь, поехали! Статья будет в формате \"Пункт из оригинальной статьи - ответ\".Уже практически дописав статью я решил добавить еще одно предупреждение - в статье будут встречаться иностранные слова, которые можно было бы написать и на русском, но написаны они на английском. Считайте это авторским стилем, а если вас это бесит - прошу сначала хорошенько поколотить боксерскую грушу, и только после этого писать гневные граммар-нацци комменты 😘СодержаниеHiringSharing Code, Knowledge, and DevelopersDeveloper ExperiencePerformanceUnified UI ExperienceNative IntegrationsInternationalizationBuilt-In Navigation (& more)Web SupportThird-Party LibrariesCompanies Using React Native vs. FlutterDynamic Updates (Code Push, etc)HiringАвтор оригинальной статьи указывает, что проблема с наймом разработчиков сейчас (а когда нет?) стоит очень остро. Но, якобы, можно просто взять и заставить обычного React-разработчика (коих много) писать на React Native. Что же...если представить, что любой React-разработчик заведомо согласен менять свой стек (переходить из web-разработки в mobile) - то что помешает ему перейти и на Flutter? На этом пункте я бы сделал следующее - провел опрос среди React-разработчиков, которые готовы перейти в кроссплатформенную мобильную разработку:Переходя в кроссплатформенную разработку, какую из предложенных технологий вы бы хотели использовать в будущей работе, если бы вам дали время на её изучение?- React Native- Flutter- XamarinXamarin я добавил случайно 😀В целом, моя мысль в этом пункте следующая - если вы относитесь к своим сотрудникам (настоящим или будущим) исключительно как к ресурсу, который будет делать все, что вы скажете - это одно. Если же вы планируете собирать обратную связь о ваших процессах и технологиях - это другое и технологический выбор тут тоже важен. Вдруг, внезапно, выяснится, что даже ваши закоренелые React Native разработчики с удовольствием бы перешли на синюю сторону, а мешает им ипотека и ваше нежелание давать своим разработчикам развиваться.Sharing Code, Knowledge, and DevelopersВ этом пунктеавторпишет, что лучше всего, когда меньше всего кода - с этим утверждением невозможно не согласиться, но дальше начинается много \"но\":Чтобы переиспользование было вы должны использовать оригинальный React для WebВаш Backend должен быть на Node.jsПри этом, на примере моего друга - в их проекте около 1000 строк кода, переиспользуемого между Node.js и React Native. Что же...ради 1000 строк кода действительно стоит отдавать предпочтение одной из технологий. Но что если backend не на Node.js? А так бывает? А если web не на React? И так тоже бывает? Столько провокационных вопросов, а ответов нет.Один из простых ответов будет в том, что, возможно, вы напишите меньше кода на Flutter, чем на React Native, чем сэкономите эту тысячу строк кода несколько раз (во Flutter есть отличная кодогенерация). А кроме того, для Flutter вам не придется писать эту 1000 строк кода с нуля - она у вас уже написана на Node - просто перепишите её на Dart.Также, хочу сделатьочень жирную ремарку- наличие в вашем штате 10 React разработчиков, 10 React Native разработчиков и 10 Node.js разработчиков не равно тому, что у вас есть 30 разработчиков, способных сделать качественный продукт на любом из трех упомянутых инструментов. А с Node.js я вообще обращаю ваше внимание на то, что это backend. И взять и посадить frontend-разработчика (web или mobile - не важно) и просто поручить ему писать backend - безответственно. Это требует куда более глубокого знания алгоритмов и структур данных, а цена ошибки может быть существенно выше. Плюс, добавим backend-специфичные hard-skills. Так что все ваши 30 человек не являются абсолютно переиспользуемыми \"юнитами\", которых можно легко перетаскивать из одного проекта в другой, как в какой-нибудь стратегии.Под конец этого пункта автор пишет, что на StackOverflow есть множество ответов на вопросы по React Native, React. и просто JavaScript. Честно говоря, я не совсем понял, что это мне должно сказать. Ну про Flutter и Dart там тоже много ответов. Крайне маловероятно, чтобы новичок во Flutter столкнулся с такой проблемой, решения которой еще нет.Developer ExperienceВ этом пункте автор оригинальной статьи объективен, хоть и пытается выставить RN в лучшем свете, чем есть на самом деле, упоминая Expo. Что же, а я заострю ваше внимание на этом пункте!Опыт использования инструмента, на мой взгляд - крайне важная и очень тонкая материя, которая может очень сильно влиять на бизнес-показатели, и перечеркнуть все ваши старания по созданию \"универсальной команды JS-еров\". К чему приводит негативный пользовательский опыт в разработке?Во первых - это простой. Разработчик может тратить часы драгоценного времени на то, чтобы просто ждать, пока пересоберется ваш проект. А баги? \"Черт, опять все зависло и не работает\".Второе - выгорание. Когда у вас постоянно что-то не работает или работает не так, как должно или что-то еще - это раздражает. Когда вы каждый день раздражаетесь от своей работы, рано или поздно она надоедает и это влияет на перформанс. А в конце концов это приводит к срывам сроков, нервам и смене статуса на \"В активном поиске\" и речь, отнюдь, не о личной жизни. А вы же помните, что найти разработчика тяжело, а хорошего - очень? Если вы не верите мне, просто почитайтеотзывык XCode.Главный вывод в этом пункте - если разработчик тратит время не на борьбу со своим \"молотком\", а на его продуктивное использование - то он становится счастливее, \"преданнее\" и продуктивнее.PerformanceМое любимое 😈...Если кратко пересказать слова автора, то получится примерно следующее:Сравнивать производительность сложно. Если писать хорошо - то все будет хорошо, а плохо написать можно на любой технологии. Иии дааа...React Native сейчас вроде как медленнее, но это пока! Вот скоро, совсем немного надо подождать, и скоро в React Native завезут новый движок и все как залетает!Что же...кажется настало время язвить :)Первое - то мы собираемся легко свитчить React разработчиков в React Native (тут я напомню, что JavaScript != Java, а React != React Native). То нам нужны опытные разработчики, которые умеют писать \"правильно\", чтобы ничего не тормозило.Второе - оригинальная статья опубликована в марте 2022 года и там говорится про \"новый движок\", сейчас середина октября 2022 года. У меня вопрос - прилетело уже обновление? Много сил ушло, чтобы его использовать? А тормозить и правда все перестало или не совсем и пора искать более опытных разработчиков? :)Далее автор пишет, что в RN тоже можно использовать Skia и получить ту же производительность, что есть и у Flutter. Но погодите-ка, а как же тогда быть с главным \"плюсом\" RN - возможностью отрисовки платформенных компонентов? Странно, странно.В целом, кто бы что не говорил, но едва ли наступит тот день, когда \"среднее по больнице\" приложение, написанное на RN вдруг станет работать быстрее, чем такое же, но написанное на Flutter. Можете скриншотить.А может зададимся вопросом - а зачем нам вообще какая-то там \"производительность\"? Юзер вон уже какой год хавает лагучий скайп, у которого боковая шторка открывается с секундной задержкой, и ничего! Предлагаю спросить это у ваших пользователей. Если, конечно, они смогут дождаться, когда отрендерится опросник в вашем RN-приложении 😁Unified UI ExperienceМне очень понравился этот пункт. Автор обыгрывает идею, что любое приложение должно выглядеть только так. как выглядит платформа, и только. Чтож - вынужден согласиться. Если ваша задача - сделать унылый интерфейс из стандартных системных компонентов, то React Native - ваш выбор. На нем это будет действительно проще. Но если! вы хотите добавить плавных и \"сочных\" анимаций, продуктовой айдентики, кастомных форм и очертаний к тому, что пользователь видит и трогает на экране своего устройства...Flutter! И только он (тут мы говорим про кроссплатформу, нативщики, еще рано ставить минус). Сколько я слышал разных \"историй\" о том, как непросто делать анимации в RN или как они отъедают драгоценные кадры в секунду. Но ни разу не доводилось слышать или самому сталкиваться с подобным за все мои годы (4+) работы с Flutter.Объективным минусом Flutter в данном пункте будет его \"инаковость\". Он пытается быть похожим на нативную платформу (если вы решили делать интерфейс в нативном стиле), но у него это не совсем получается. Какие-то микро-взаимодействия будут работать не так, где-то физика скролла будет не такой и так далее и тому подобное. Поэтому если вам действительно надо сделать \"нативно\" - то может вообще использовать Swift или Kotlin?Native IntegrationsСнова прибегну к видоизмененному цитированию автора оригинальной статьи:Во Flutter инструментарий для взаимодействия с нативной платформой отличный. В React Native - не очень. Но вот скоро, совсем чуть-чуть, и новая архитектура RN позволит избавиться от большой части недостатков и вот тогда заживем!Опять я ехидничаю, но даже не пишу, что начал это делать. Что поделать. Пожалуй я еще добавлюоднумонеткувкопилкуFlutter и перестану избивать эту тряпичную куклу.Вот хотел же перестать, но не могу не раскрыть мысль немного подробнее: в отличие от RN, Flutter работает и на Desktop и в Web, и вообще \"на любом устройстве, у которого есть экран\". И интегрироваться он может с любой \"нативной\" платформой. Есть отличныеинструменты, которые позволяют уменьшить количество кода, которое надо для этого написать практически до нуля. Кроме того, уже сейчас можно использовать как \"язык хоста\" - C, C++, Go, Rust. Ну и стандартные Swift / Objective-C, Java / Kotlin. А RN все ждет новую архитектуру. Ну ок.InternationalizationЧестно - не знаю, как это устроено в RN, но во Flutter это сделано так просто, как только может быть. Меня очень позабавила фраза из статьи автора:However, React Native’s third-party i18n support is getting pretty good these days.То есть она лишь становится хорошей, не была всегда, с самого начала, а только становится. И да, если создатели сторонних решений решат перестать поддерживать свои решения (сори за тавтологию), то вы останетесь один на один с этим решением, которое было решено не поддерживать. Вы же не думали, что только Google бросает свои проекты?Built-In Navigation (& more)Опять же, я не силен в том, как устроена навигация в React Native. Попрошу вас, если вы пишете на RN - не затоплять комментарии своими слезами. Там могут быть другие люди и я не хочу, чтобы они утонули. Возможно я не прав, и, вопреки всему, навигация в RN очень приятная и легкая. Но как бы то ни было - именно такой она является во Flutter. Положа руку на сердце - эта статья является вопрощением моей прокрастинации, так как написана вместо другой статьи, которую я не могу закончить и в которой я пытаюсь рассказать о том, какой же выбрать навигатор для Flutter, выбирая из двух, не побоюсь этого слова - идеальных библиотек.\"Библиотек\"? Что? Автор оригинальной статьи написал, что во Flutter есть встроенная навигация! Зачем библиотеки? Ответ прост - эти библиотеки являются очень приятными в эксплуатации абстракциями над новым, шикарным и чрезвычайно приятным низкоуровневым API для навигации во Flutter, также именуемым Navigator 2.0. А что с 1.0? Нууу...давайте перелистнем эту страницу.Если не лить воду, не писать шуточек за 200, то в сухом остатке будет следующее - во Flutter есть отличная встроенная декларативнаянавигация, позволяющая реализовать любую прихоть, поверх которой есть невероятнейшаябиблиотека, с помощью которой сделать это будет еще проще, приятнее и быстрее (к этому пункту мы еще вернемся ниже). И, бонус! У вас не будет выгорания. Кажется, я сейчас спойлернул часть из своей недописанной статьи, но, думаю, когда я ее допишу - вы все забудете.Web SupportА вот это больно! Или нет? Сейчас проверим.But their approach to web is very much “let’s use a canvas and draw on it” rather than using the native DOM.Автор часто упоминает...native...native...native, как будто хочет загипнотизировать своего читателя -nativeэто хорошо, а неnative- плохо. Позвольте не согласиться. Во первых - Canvas - это тожеnative. И его использование для отрисовки интерфейса и для веба - более чем приемлемо, если удовлетворяет поставленным целям. Но так же не принято! А как же SEO? Опять больно! Вот что пишут сами создатели фреймворка:In general, Flutter is geared towards dynamic application experiences. Flutter’s web support is no exception. Flutter web prioritizes performance, fidelity, and consistency. This means application output does not align with what search engines need to properly index. For web content that is static or document-like, we recommend using HTML—just like we do onflutter.dev,dart.dev, andpub.dev. You should also consider separating your primary application experience—created in Flutter—from your landing page, marketing content, and help content—created using search-engine optimized HTMLМне показалось или только что был слышен стук молотка по последнему гвоздю гроба, в который затолкали кричащий \"зачееем ваааам SEEEOOO???\"Flutter? Well. Буду честен и с самим собой - интернет-магазин на Flutter, скорее всего, я бы писать не стал. Возможно...проведя несколько недель за глубоким ресерчем, как решить \"проблему\", но точно не сразу. Но что если делать не интернет-магазин? Что если это будет действительно web-приложение? Полноценное приложение, но для запуска из браузера? То есть вам не нужно индексирование каждой божей страницы вашего продукта. Давайте попробуем сравнить решения.Что предлагает React Native?В теории есть React Native for Web (как-то так), который позволяет почти не писать или совсем не писать код для веба (поправьте, пожалуйста, меня в комментах, если эта штука позволяет вообще не писать ничего, чтобы завести все в вебе). Если же мои предположения верны, которые основаны на анализе инструментария в целом - то это будет кривоватая вещь, код для которой писать таки придется. Недаром же автор все время говорит о переиспользовании кода между React и React Native, а не пишет \"вы можете все написать один раз на React Native и не париться\"? - то лучшим выбором будет React. Из этого следует, что весь UI слой вам придется написать заново. А вы же помните, что React Native рисует \"нативные компоненты\"? А в вебе их, как бы, нет. Поэтому вам понадобится дизайнер, который сделает макеты для веба (в том числе и мобильной версии веба). А затем вам - придется просто заменить UI. Или нет? А может придется еще потратить N-е количество времени на то, чтобы сделать вашу логику полностью переиспользуемой в разных проектах? А хорошо ли вы отделили UI от логики? Если везде все ок - отлично. Едем дальше. Мобильная версия для web 😉. Интересно, в каком виде она будет реализована? Как на iOS? Или как на Android? Или, может быть, кастомно? А будет ли отличаться от приложения на React Native? А если кастомно и должно быть одинаково с приложением? То получается - придется делать кастомные элементы и в React Native? Бороться с инструментом, который для этого и не создавался? Конечно же нет! Я просто подтруниваю над React Native разработчиками. Всем известно - в React Native легко и просто реализовать красивый, живой интерфейс, который будет выглядеть одинаково на обоих платформахнет;А что предлагает Flutter?Хмм... Вы можете. Просто. Написать. Приложение. Один раз. И оно будет работать везде - в вебе, на iOS, Android, Windows, MacOS, Linux,RaspberryPI,Car Play, и, может быть - чем нибудь еще. Не хочу, чтобы меня обвинили в кликбейте, поэтому добавлю - \"гарантированно всё будет работать на всём, кроме Raspberry и Car Play\".А что с производительностью? Нуу...its depends, как говорится. Честно говоря - оно может подтормаживать на 4K экранах в Fullscreen (речь про web). Может подтормаживать даже и не на 4K. Но может и не тормозить совсем. Я использую прием автора статьи и скажу - \"если все делать хорошо, то и тормозить ничего не будет\". Вот вам примерпесочницыс темами для Flutter, где можно настроить любой аспект внешнего вида для всего приложения, и он немного лагуч. И вот другойпример- упомянутой выше либы для навигации, где и тормозить то нечему - все летает.Выводы тут я бы сделал следующие - я не ослепленный фанатик, и, конечно же, технологии, созданные для веба изначально (React, Vue, Angular, etc.) - лучше и производительнее, чем, конкретно, Flutter (по крайней мере - в большинстве случаев). И во Flutter могут быть потенциально непреодолимые барьеры для использования в вебе (SEO). Поэтому, использовать ли Flutter для веба - зависит от того, что за продукт вы делаете. Формула тут такая (на мой личный взгляд) - выбирая Flutter, вы сделаете лучше вашему приложению, и, возможно, хуже вашему сайту. Выбирая же React Native - вы сделаете хуже вашему приложению, и, возможно, лучше вашему сайту.Third-Party LibrariesСмешное. Я процитирую TLDR автора и пройдусь по этому пункту дальше:Flutter and Dart have some high-quality built-in tools, but the third-party ecosystem is a React Native advantage, as it’s almost impossible to replicate a robust ecosystem like JavaScript/React in an isolated community like Dart/Flutter.В целом автор тут уповает на то, что у JS-community очень много решений, на все случаи жизни, которые отлично заходят и для React Native. Отлично. Особенно с этим спорить я не буду. Но, также, автор пишет, что в Dart / Flutter, якобы, может быть дефицит с качественными third-party решениями от community. Он не говорит это прямо, но подразумевает. Что же. Официально заявляю - я не знаю ни одного \"пакета\", который был бы реализован для RN, но не реализован для FL. Вернее сказать - ни одной функциональности. Возможно, есть что-то очень специфическое, что сделал какой-то бедолага для RN, но этого нет для FL. Но шанс, и вам понадобится тоже самое, крайне низок, да и вы уверены, что то, что есть для RN вас устроит?Другой тезис, уже высказанный моим друже - \"для RN (и JS, в целом) всего больше, чем для Dart / Flutter\", мол есть из чего выбирать. А \"у вас - достаточно двух видов колбасы\". Эх, если бы мы действительно выбирали колбасу... Давайте так. Вот есть задача - сделать навигацию. И вы будете реализовывать ее в нескольких приложениях. Вы нашли библиотеку, которая отлично вам подходит и решает все ваши задачи. Вы что, в первом приложении ее используете, а во втором - нет? Будете \"гулять по рынку и выбирать другую колбасу\"? По моему мнению, эта фаза должна вычлениться в ресерч, перед тем, как делать самое первое приложение. И это касается всех кусочков функциональности, которые вы будете затаскивать к себе извне. Выбираешь лучшее в рамках ресерча, а затем используешь это до тех пор, пока в хоче очередного ресерча не наткнешься на что-то еще более подходящее (через время всегда появляется что-то еще лучше).Исходя из этого, пункт про, якобы, какое-то преимущество RN в области решений, созданных участниками community, считаю несостоятельным и популистким (у нас больше, чем у вас).Companies Using React Native vs. FlutterИ я снова процитирую TLDR автора:Advantage to React Native, with some additional nuance that can’t be captured in one sentence.А теперь это:With that said, Flutter has done a good job of doing their development in the open, fully open-source and driven by continuous community engagement and feedback — which is different from the general feeling that React Native, where it’s driven by what Meta/Facebook needs first, and done privately before eventually it becomes available externally.Что-то тут не сходится 🧐. Ладно, если честно, последняя фраза \"вырвана из контекста\", поэтому предлагаю вам самостоятельно снимознакомиться, чтобы сделать свои выводы.А теперь к фактам:React Native - это кожура от того, что Facebook (Meta) [Роскомнадзор, 🖕] делает для себя (меня уже смущает такой подход, когда мега-корпорация скидывает \"объедки\", называя это Open Source'ом)Google, с технологической точки зрения, является намного более технологически развитой компанией, чем Facebook (Meta) [Роскомнадзор, снова 🖕](Этот пункт не является прямым подтверждением того, что конкретный продукт гугла будет лучше конкретного продукта другой компании, но в общем и целом, когда одна компания является более продвинутой, чем другая, это склоняет к мысли, что все или почти все её решения будут также, более продвинутыми. Если вы задаетесь вопросом - а в чем именно Google более технологичен, чем Facebook? - Welcome в комменты, с удовольствием поделюсь ссылками; Ах да, я еще не писал, что являюсь фанбоем Google? Вот теперь и написал)Google - разработал Flutter, Dart, а еще и продолжает его разрабатывать в тесном тандеме с communityЧто-то здесь не сходится, вам не кажется? Факты говорят, что процесс разработки, как минимум, за Flutter. Я забыл! Пункт ведь про то, как компании используют конкретные фреймворки. Ну ок. Вот вамоднассылочка, про один показательный пример.А еще можете сравнитьэтидвасписка, и сами сделать свои выводы 😀Dynamic Updates (Code Push, etc)И снова больно! Да, во Flutter нет обновлений в обход сторов. Илиесть? Но, строго говоря - этоне оченьто и законно. А не хотите ли вы, часом, заняться чем-то не очень честным? Например - заменять одно приложение другим спустя какое-то время... Ну ладно, сдаюсь. Да, у RN есть реальная возможность как-то криво-косо обновлять приложения в обход сторов, а у Flutter и этого нет. Но,мое личное мнение, если успешность вашего бизнеса зависит от такого очень зыбкого функционала, из-за которого ваше приложение так и вовсе могут навсегда удалить - вы что-то делаете не так. Но это, на мой взгляд - единственный безальтернативный, без всяких \"но\" плюс за RN.ВыводыАвтор делает нейтрально-правильный вывод - \"все зависит от вас самих\". Вам и только вам решать, что использовать. Но я не буду совсем инертным и напишу кое-что конкретное:Чтобы определиться с тем, на чём будет зиждиться ваш продукт следующие несколько лет, стоит потратить хотя бы несколько недель и сделать глубокий ресерч - нанять двух первоклассных разработчиков для React Native и Flutter, изолировать их друг от друга (чтобы не подрались) и заставить сделать одно и то же - простенький прототип того, что вы и собираетесь делатьПосмотреть, кто сделает прототип первым. Оценить, насколько результат будет вас устраиватьПоследнего в этой гонке можно выгнать на мороз, а технологию первого и сделать основнойилиПродолжать разрабатывать два приложения параллельно, собирая метрики о количестве багов, удовлетворенности пользователей и сотрудников, скорости разработки с учетом всех нюансов - вечный A|B тестЧерез, хотя бы год, собрать все полученные данные воедино и выгнать на мороз проигравшую командуЧто? Вы - стартап, и у вас нет на это времени? Нужно еще вчера? Хмм...никогда такого не было и вот опять. Что же, со всей ответственностью заявляю - моя ставка на Flutter, сделанная весной 2018 года - выиграла. Flutter технологически превосходит RN на порядок. Он гибче, быстрее, комфортнее и просто мощнее. Это как сравнивать Таноса, когда он только что унизил Халка и Железного человека, когда он вышел из пещеры (будем считать, что Танос - хороший). И с вероятностью 99% Flutter подойдет вам намного больше и доставит намного меньше проблем, чем RN. А если вы входите в оставшиеся 1% - то вам не нужны мои жалкие советы, да и эта статья в принципе, вы и сами знаете, что вам нужно.Я искренне желаю оказаться в мире, где Flutter займет если не главный трон, то как минимум - трон справа от Короля, и эта статья - мой небольшой вклад в это дело. И хочу я этого не потому, что выбрал Flutter. Отнюдь - я выбрал Flutter, потому что он обязательно окажется на этом месте(если, конечно, гугл его не бросит🤣). А если вы топите за RN - спросите у себя (или своей команды):"}, {"user_id": 1, "title": "Тайваньское чудо: как захолустный остров превратился в сердце мирового хайтека", "description": "В наши дни Тайвань не сходит со страниц мировых медиа: его ключевая роль в глобальном производстве ч", "category_id": 5, "active": true, "is_deleted": false, "created_at": "2022-10-29T10:00:01.000Z", "updated_at": "2022-10-29T10:00:01.000Z", "image": "https://habrastorage.org/r/w780q1/webt/et/do/ty/etdotyuexmsliso49oehn7duss8.jpeg", "content": "В наши дни Тайвань не сходит со страниц мировых медиа: его ключевая роль в глобальном производстве чипов общеизвестна, как и связанные с этим риски для цифрового мира, включая стремление КНРподчинить себе непокорный остров. Современный Тайвань — земля высоких технологий, состоящая из сияющих неоном мегаполисов с высокотехнологичными заводами пополам с живописными горами. Уровень жизни на Тайване вполне сопоставим с современным японским или южнокорейским, а демократичности его политической системы в Японии или в Сингапуре могут только завидовать, не говоря уж про КНР.Но так было отнюдь не всегда. Несколько десятилетий назад на Тайване царила диктатура с военным положением и «белым террором». Население было лишено многих прав, работало почти что за еду на примитивных полях и кустарных фабриках по пошиву ширпотребной одежды, игрушек и зонтиков. Подушевой ВВП был на уровне ещё колониальной Нигерии, а структура экономики больше напоминала современный Бангладеш, не имея и намёка на будущий высокотехнологичный расцвет.Как Тайвань, который даже ближайшими союзниками юридически не признаётся независимым от КНР государством, умудрился из этой кромешной безнадёжности превратиться в процветающую кузницу цифрового будущего планеты?До недавних пор история Тайваня была печальной и безрадостной. Предполагаемая прародина австронезийских народов, ныне живущих от Мадагаскара до Новой Зеландии и Гавайев веками находилась на отшибе истории. Населённый неолитическими аборигенами остров понемногу колонизировали китайские переселенцы, попутно его берега становились пристанищем то японских пиратов, то голландских торговцев.Улица в тайваньском городе во времена японского колониального господстваВ 1895-м Тайвань отобрала у правившей Китаем империи Цин молодая Японская империя. Колонизаторы сочетали жестокое подавление любой оппозиции и попытки принудительно японизировать местных китайцев и аборигенов с серьёзными вложениями в экономику и инфраструктуру острова: его пытались сделать «образцово-показательной колонией». Успехи были противоречивыми, большая часть жителей осталась бедными необразованными крестьянами.Когда японцы проиграли Вторую мировую войну, победители изъяли остров и передали его официальному китайскому правительству Гоминьдана. Вот только спустя четыре года националисты Гоминьдана проиграли Гражданскую войну коммунистам — и все, кто успел, бежали от «красных» на отделённый проливом Тайвань. Включая многих крупных предпринимателей, состоятельных людей и высококлассных специалистов.Естественно, коммунисты попытались добраться до гоминьдановцов и там — но в Корее уже началась война, и в окрестных водах с самым мрачным видом появились авианосные соединения и линкоры ВМФ США. Не срослось.В первые десятилетия после эвакуации «белых» на остров жизнь на Тайване была бедной, трудной и печальной. «Два Китая» в суровости и свирепости к гражданам стоили друг друга. Пока на континенте славили гений Мао, громили древние памятники, истребляли воробьёв и бросали профессоров «народно перевоспитываться» в глухие деревни — на острове за подозрения в симпатии к коммунистам, попытки протестов и забастовок, разговоры о демократии, правах человека и интересах трудящихся, можно было в лучшем случае попасть в тюрьму, а в худшем угодить под расстрел или «исчезнуть».Чан Кайши и Мао ЦзэдунКонкурентоспособность тайваньской экономики, как позже будет и при открытии миру КНР, поначалу строилась на дешевизне и бесправии рабочей силы. Впрочем, хватало и во всех смыслах толковых мер. На острове по уже опробованному в послевоенной Японии образцу американский экономист Вольф Ладежинский помог организовать аграрную реформу: у крупных землевладельцев земли принудительно выкупили земли и продали крестьянам на условиях льготной рассрочки. Помещики получили много денег, которые пришлось вкладывать в бизнес и производство — а с земледельцев сняли удушающую хватку помещичьей аренды и превратили их в мелких собственников.Уже в 1948 году на острове из иностранных комплектующих наладили производство несложной радиотехники. В начале 50-х годов разорённая войной и бомбёжками бывшая метрополия получила сильнейший толчок в развитии: Япония оказалась ближним тылом для огромной группировки войск ООН во главе с США, сражавшейся в Корее с коммунистами. Везти всё необходимое для сотен тысяч военных с массой сложной техники было слишком далеко, дорого и сложно даже для американской логистики.Японские предприятия получили колоссальные военные заказы, а после окончания войны продолжили развитие на уже созданном заделе с американскими технологиями и разнообразными рынками сбыта. Поначалу товары японского производства были похожи по качеству на китайский «ширпотреб» 90-х годов — зато стоили дёшево, производились в больших количествах и продавались в весьма бедном мире 50-х и 60-х на ура.Поскольку тайваньская рабочая сила была ещё дешевле японской, а старые связи не успели слишком уж разорваться — часть заказов растущей как на дрожжах японской промышленности доставались и тайваньским подрядчикам. Общие враги, общие союзники и общая коммерция помогли вчерашним врагам, японцам и гоминьдановским китайцам, найти общий язык.Тайбэй, столица Тайваня, в 1964 годуС середины 60-х годов тайваньская промышленность, начинает всё более быстрый рост. Начав с самой дешёвой одежды, игрушек и зонтов, тайваньские компании расширяли ассортимент продукции в сторону всё более сложных и технологичных товаров. Правда, в электронике и машиностроении поначалу речь шла только о сборке продукции из японских деталей — но лиха беда начало. В экономику пошли внутренние и внешние инвестиции, уже не только из Японии и США, но и из Западной Европы.Часть лицензий на производство закупались официально, к части же авторских прав у мелких тайваньских производителей было такое же философское отношение, как у их континентальных китайских коллег в 90-е. Да и японцы в те годы нередко грешили тем же. Тайваньское экономическое чудо не в последней степени — как и у других «азиатских тигров» — исходно во многом коренилось в грошовой рабочей силе, собиравшей низкокачественный контрафакт в сарае у дядюшки Ли «из чего-то и палок». Ну а кому легко со стартовым капиталом?В конце 1960-х годов на Тайвань пришла американская компания «Philco-Ford», специализировавшаяся на производстве радио- и электронной техники. Она одной из первых решила попробовать перенести производство в Азию, и её выбор пал на Тайвань. Производство с участием местной рабочей силы, гораздо более дешёвое, чем в США, удалось наладить с вполне сопоставимым с американским качеством. Не в последнюю очередь сыграло свою роль то, что при всей свирепости внутренней политики Гоминьдан всё же солидно вкладывался в массовое образование.Рост душевого ВВП Тайваня и других «азиатских тигров» с начала 1960-х годовСтало ясно, что при должном управлении и организации производственных процессов перенос производства из стран Запада с их большими зарплатами и социальными правами рабочих в Азию с дешёвой, бесправной и при этом дисциплинированной рабочей силой может быть крайне выгодным. Из острова, где производят плохой и дешёвый ширпотреб, Тайвань в глазах бизнеса и потребителей начал превращаться в место, где при желании можно разворачивать производства с высоким, почти «западным» качеством продукции. Через некоторое время «Philco» стала одной из первых же компаний, которые почти полностью перенесли производство в Азию — и её примеру стали следовать очень многие.Среди них была американская корпорация RCA (Radio Corporation of America), занимавшаяся производством широкого спектра электроники военного назначения для вооружённых сил США. На рубеже 60-х и 70-х годов под впечатлением от столкновения с советской военной техникой в Индокитае и на Ближнем Востоке американские военные начали делать ставку на глубокую цифровизацию систем вооружения. В 70-х RCA и правительство Тайваня заключили соглашение о строительстве на острове завода по производству чипов по технологии CMOS, а также обучении в США тайваньских инженеров со специализацией в микроэлектронике. Правда, производство из соображений удешевления получилось крайне токсичным — и немало рабочих заработали на заводе в Таоюане онкологические заболевания. Судебные процессы по этому поводу продолжаются до сих пор.Протесты родственников жертв производства RCA в 2015 годуК концу 70-х годов изменилось и политическое окружение Тайваня. После вьетнамской катастрофы и взрывного роста цен на нефть США оказались в тяжёлом социально-политическом и экономическом кризисе, который заставил американское общество многое переосмыслить (и заоднопородил эстетику классического киберпанка). Общество США сотрясали скандалы, показавшие американцам, какую дичь творили их политики, военные и спецслужбы под предлогами холодной войны. Злым от кризиса практически во всём американцам это сильно не понравилось, и вопросов своим властям они стали задавать гораздо больше.В результате готовность Вашингтона покрывать любых «с*киных сынов» только на том основании, что они против коммунистов, сильно просела. До означенных «с*киных сынов» стали доводить, что для сохранения поддержки свободного мира, стоит хотя бы немного стандартам этого самого свободного мира соответствовать в плане демократии, либерализма и прав человека — а не кидать людей в тюрьмы вагонами за чтение Энгельса или попытку создать профсоюз.Конкретно для тайваньского Гоминьдана ситуация усугубилась тем, что Вашингтон старательно сближался с Пекином против Москвы, невзирая на всё своеобразие КНР при ещё живом председателе Мао. В этом свете «токсичность» тайваньской политической системы повышала шансы на то, что остров сдадут китайским коммунистам в качестве какого-нибудь жеста доброй воли. Да и общество на Тайване менялось: нищета сменялась всё более обширным средним классом, включая высокопрофессиональных рабочих. Запрос на демократизацию и либерализацию рос буквально со всех сторон.Тайбэйские улицы в 80-хПосле смерти в 1975 году отца-основателя Гоминьдана Чан Кайши его сын Цзян Цзинго (во времена обучения в СССР известный как Николай Елизаров) взял курс на плавное «раскручивание гаек». Либерализация и приватизация в экономике, стимулировавшая усиление и без того огромных иностранных инвестиций, аккуратно соседствовала с программами крупномасштабных государственных инфраструктурных проектов, включая «Десять больших строек».В 80-х годах диктатура Гоминьдана плавно, хоть и не без эксцессов, наконец сменилась демократией. Именно в это время на острове появляется собственное производство микрочипов.Первой была UMC, созданная в 1980 году на базе государственного научно-исследовательского института промышленных технологий — одного из главных научно-технических центров, обеспечивших переход Тайваня к массовому высокотехнологичному производству. Ещё в 1977 году в этом НИИ было запущено первое опытное литейное производство интегральных схем на острове, и именно с него идёт история собственного тайваньского производства микрочипов. В 1985 году UMC официально зарегистрировалась на Тайваньской фондовой бирже, и вскоре помимо выпуска интегральных схем занялась и производством персональных компьютеров.Сунь Юаньсюань, министр экономики с конца 60-х, создатель НИИ промышленных технологий и один из «отцов» тайваньского технологического прорываВ 1987 году, появилась на свет Taiwan Semiconductor Manufacturing Company — та самая TSMC, которая быстро обошла UMC и ныне является крупнейшим глобальным производителем микрочипов, в том числе почти всех передовых с минимальной размерностью.Её основатель, Морис Чанг, вернулся на Тайвань в 1985-м, после трёх десятков лет работы в США на Texas Industries — первопроходцев в создании интегральных микросхем. Чанг покинул американскую корпорацию с поста, ни много ни мало, вице-президента по внешнеэкономической деятельности. При поддержке тайваньского руководства, и опираясь на уже существующие на острове профессиональные инженерные и рабочие кадры, он сумел создать на острове компанию по производству недорогих и высококачественных чипов для зарубежных заказчиков. А попутно в 1988 году возглавил тот самый НИИ промышленных технологий, кадры которого изрядно помогли успеху его корпорации.TSMC предложила крупнейшим американским корпорациям производить для них чипы на очень выгодных условиях — и… масштабы грядущего успеха которой в то время вряд ли мог представить даже он сам. Правда, на массовом слуху TSMC оказалась только в последние годы — а до рубежа 2010-х и 2020-х она была известна в основном специалистам как подрядчик, скромно обеспечивавший успехи таких глобальных компаний, как Intel, Apple, Qualcomm, Nvidia, AMD, Marvell Broadcom, MediaTek, Huawei.Один из заводов TSMC на ТайванеМорис Чанг и его коллеги сумели использовать идеальный «коридор возможностей», зайти на перспективнейший рынок, когда это ещё требовало не таких уж высоких технологий и колоссальных вложений, и стать на нём почти монополистами, за которыми теперь очень трудно угнаться.Отнюдь не микрочипами едиными, тайваньский хайтек расцвёл в конце 80-х годов. В 1987 году на основе созданной в 70-е семейной фирмы Multitech была образована компания Acer. Характерным признаком времени стало то, что теперь тайваньские высокотехнологичные компании стали бодро осваивать Америку и Европу. Acer уже в 1988 году купил калифорнийского разработчика и производителя ПК Counterpoint Computers, и перенёс производство к себе. На следующий год Acer приобрёл нидерландскую компанию Kangaroo Computer B.V., ставшую его европейским филиалом, и создал совместное предприятие по производству микросхем с американской Texas Instruments.В 1989-м на свет появился Asus, быстро ворвавшийся на рынок производства компьютерной и телефонной техники. В 90-е Тайвань окончательно стал одним из главных мировых центров производства компьютерной техники, а затем и сотовых телефонов. Ну а о чипах и говорить излишне.Впечатляющий путь за три-четыре десятка лет со старта на уровне нищей диктатуры с необразованными крестьянами, да ещё и под постоянной угрозой военного вторжения.Telegram-канал с полезностямииуютный чат"}, {"user_id": 1, "title": "Как кастомизировать UI артефакты для Selenide + Selenoid + Allure (with TestOPS)", "description": "На заре формирования команды, в которой работаю, было решено использовать JVM-стек для реализации U", "category_id": 3, "active": true, "is_deleted": false, "created_at": "2022-10-28T14:45:57.000Z", "updated_at": "2022-10-28T14:45:57.000Z", "image": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/a73/9de/27b/a739de27b4d9d47dc12d7892c2c2a43f.png", "content": "На заре формирования команды, в которой работаю, было решено использовать JVM-стек для реализации UI-автотестов, а именно:Kotlin — язык разработки;JUnit5— ядро проектирования автотестов;Selenide— основа взаимодействия с DOM-моделью браузера в автотестах;Allureдля JVM — очень удобный инструмент для формирования отчётности в автотестах.Дополнительно, у нас имеется следующий ряд инструментов для улучшения процессов UI-автотестирования:Allure TestOPS— инструмент хранения артефактов автотестов и тестовой документации;Selenoid— для удалённого запуска тестов, кросс-браузерного тестирования и опциональной видеозаписи запущенных автотестов и последующего их храненияВсе эти инструменты почти всегда отвечают нашим требованиям, каждый делает свою работу, и делает её хорошо, но эта статья просто так не написалась бы.Очень часто дефолтное использование этих инструментов при корректной настройке порождало несколько проблем:Тестов раньше было мало, а сейчас стало больше.Стало больше автотестов — стали длиннее видеофайлы в Selenoid с записанным прохождением автотестов. К тому же они не особо связаны с отчётами от Allure.Стали длиннее видеофайлы — тяжелее стало понимать, какой тест исполняется в конкретный момент времени.Тяжело стало понимать —нужно большей прозрачности и гибкости в формировании отчёта о прохождении UI-автотестов.Есть проблема — нужно решать. В целом, подобные нетривиальные задачи решались и ранее, только в среде API автотестов. Выбранный стек (JUnit5, Selenide) позволяет проводить довольно глубокие конфигурации, удалось реализовать поставку серьёзно доработанных видеоартефактов прохождения автотестов для Allure-отчёта с поддержкой временных меток.Видео теста более часа. Беда :(Поиск решенияНа какие вспомогательные факты опирался при решении задачи:Allure позволяет использовать «вложения» в результирующем отчёте, и это «вложение» может быть применено как к конкретному шагу теста, так и ко всему тесту;Selenide начинает взаимодействие с браузером в контейнере Selenoid при первом вызове метода open() — за это тоже можно зацепиться при реализации решения;у Selenide есть контракт безопасного доступа к webdriver c помощью обёрткиWebdriverRunner;у java-реализации Selenium (Selenide основан на нём) существует контракт работы с событиями, исполняемыми webdriver'ом —WebdriverListener;Selenide берёт на себя ответственность при закрытии своих webdriver после окончания всех тестов, если работает в режиме по умолчанию;у JUnit5 есть богатая функциональность внедрения в жизненный цикл теста с помощьюJUnit5 lifecycle extensions.Основную идею реализации улучшения процесса отчётности UI-автотестов можно разбить на следующие шаги:Отказываемся от записи видео всех тестов в один файл, работаем над идеями дробления видео.Формируем таймлайн прохождения автотестов с момента старта записи видео в Selenoid.Формируем временные метки для упавших автотестов относительно таймлайна.Модернизируем видеозапись в соответствии с временными метками.Внедряем в Allure отчёт «вложение» с модернизированной видеозаписью.Часть идей была реализована as-is, а над некоторыми пришлось чуть-чуть «попотеть» в реализации разумного по времени разработки алгоритма. Но подробности ниже.Как переработать существующий процесс записи видео в SelenoidПри работе над проектом требуется учитывать следующие условия:Selenoid записывает действия в контейнере с браузером только тогда, когда выставлены следующие capabilities для webdriver (для удобства буду представлять это в виде json):{\n  \"selenoid:options\": {\n    \"enableVideo\": true\n  }\n}Selenoid начинает запись видео при старте новой сессии (открытие сессии → старт браузера → переход по ссылке на url для UI тестов)Selenoid останавливает видеозапись после закрытия сессии (или самого webdriver) в коде автотестовОбсудив различные идеи с командой и потенциальными потребителями вот этого всего решения, мы приняли следующий подход — записывать отдельное видео для каждого тестового сьюта или тестового класса, если проще.Это можно сделать следующим образом — реализацией JUnit5 Extension. Это класс, который обязан реализовать один или несколько интерфейсов, содержащихся в библиотеке JUnit5. Нас будут интересовать следующие интерфейсы:BeforeAllCallback— интерфейс, добавляющий некую функциональность перед запуском всех тестов и фикстур в тестовом контейнере (тестовом классе). Здесь мы добавим предварительную конфигурацию Selenide для настройки опций функции видеозаписи в Selenoid;AfterAllCallback— интерфейс, добавляющий некую функциональность после прохождения всех тестов и фикстур в тестовом контейнере (тестовом классе). Здесь мы реализуем процесс остановки записи видео.К тому же крайне желательно при работе этого Extension нужно понять, что:запускаются Selenide тесты, чтобы настроить нужные нам capabilities;пользователь хочет запустить тесты на Selenoid;пользователь хочет использовать опцию видеозаписи на Selenoid.Я не придумал ничего лучше чем:Классифицировать тесты, реализованные с помощью библиотеки Selenide c помощью аннотаций. Разработчик автотестов обязан пометить аннотацией тестовый класс, в котором хранятся его Selenide тесты.@Target(AnnotationTarget.CLASS)\nannotation class SelenideTestРуководствовался тем, что возможна ситуация, когда в одном репозитории с автотестами могут находиться и UI, и API, и ещё какие-либо другие тесты, но работа этого Extension не должна влиять ни на что, кроме Selenide тестов.2-й и 3-й пункты решить с помощью «флагов». Эту роль могут легко исполнять переменные окружения, в которых хранится булево значение:SELENOID_SUPPORT — для опции запуска тестов через selenoid;SELENOID_VIDEO — для опции видеозаписи.MVP решения можно представить в коде так (часть дополнительных для работы Extension методов представлены в укороченном виде и без разъяснений, и могут отличаться в зависимости от ваших идей):Extension с функцией записи видео по тестовым классамclass SelenideCoolExtension : BeforeAllCallback, AfterAllCallback {\n\n \toverride fun beforeAll(context: ExtensionContext) {\n\n        // Проверяем, что тестовый класс содержит Selenide тесты\n\n        val matchAnnotation = parseSelenideTest(context)\n\n        // Настраиваем Selenide конфигурацию только в случае запуска Selenide тестов\n        matchAnnotation?.let {\n\n            // Рекомендация от разработчиков Selenide — использовать однопоточный режим исполнения тестов\n            checkSingleThreadExecution(context)\n\n            val capabilities = DesiredCapabilities()\n            // Здесь могут идти дополнительные настройки самого браузера\n\n            // Настраиваем, если нужно запуск через Selenoid\n\t\t\t\t\t\tif (checkSelenoidSupport()) {\n\t\t\t\t\t\t\tConfiguration.remote = \"$selenoidUrl/wd/hub\" \n\t\t\t\t\t\t\tConfiguration.driverManagerEnabled = false\n\t\t\t\t\t\t\t// Настраиваем, если нужно, и опцию видеозаписи с уникальным именем для видео \n\t\t\t\t\t\t\t// на основе метки имени тестового класса, данных CI/Local режима запуска,\n\t\t\t\t\t\t\t// и UTC времени для удобства поиска в Selenoid capabilities.setCapability(\"selenoid:options\", prepareSelenoidOptions(context))\n\t\t\t\t\t\t}\n\n            // Полностью готовые capabilities пробрасываются в конфигурацию\n            Configuration.browserCapabilities = capabilities\n        }\n\t}\n\n    override fun afterAll(context: ExtensionContext) {\n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n\n        // Закрываем сессию только для Selenide тестов\n        matchAnnotation?.let {\n            WebDriverRunner.closeWebDriver()\n\n\t\t} \n\t}\n\n\tprivate fun parseSelenideTest(ctx: ExtensionContext): SelenideTest? { \n\t\treturn ctx\n\t\t\t.testClass\n      .orElseThrow { -> IllegalStateException(\"Something wrong with context. Test must contain ancestor (test class)\") }\n\t\t\t.let { AnnotationUtils.findAnnotation(it, SelenideTest::class.java) } \n\t\t\t.orElse(null)\n\t}\n\n\tprivate fun checkSingleThreadExecution(context: ExtensionContext) { \n\t\tcontext.getConfigurationParameter(\"junit.jupiter.execution.parallel.enabled\")?.ifPresent {\n\t\t\tif (it.toBoolean()) throw IllegalStateException(\"This extension works only with single thread mode\") \n\t\t}\n\t}\n\n\n\tprivate fun checkSelenoidSupport(): Boolean {\n\t\treturn when (System.getenv(SELENOID_SUPPORT_ENV_PROPERTY_NAME)) {\n\t\t\t\"1\" -> true\n\t\t\telse -> false \n\t\t}\n\t}\n\n\tprivate fun checkVideoRecorderSupport(): Boolean {\n\t\treturn when (System.getenv(SELENOID_VIDEO_SUPPORT_ENV_PROPERTY_NAME)) {\n\t\t\t\"1\" -> true\n\t\t\telse -> false \n\t\t}\n\t}\n\n\tprivate fun prepareSelenoidOptions(context: ExtensionContext): Map<String, Any> { \n\t\tval selenoidOptions = mutableMapOf<String, Any>(\n\t\t\t\"enableVNC\" to true, \n\t\t)\n\t\tif (checkVideoRecorderSupport()) { \n\t\t\tselenoidOptions[\"enableVideo\"] = true \n\t\t\tselenoidOptions[\"videoName\"] = generateVideoName(context)\n\t\t}\n\t\treturn selenoidOptions \n\t}\n\n\tprivate fun generateVideoName(context: ExtensionContext): String {\n\n        val ciJobId = System.getenv(GITLAB_JOB_ID_ENV_PROPERTY_NAME) ?: \"Local\"\n        val currentTime = ZonedDateTime.now(Clock.systemUTC())\n            .format(DateTimeFormatter.ofPattern(SELENOID_VIDEO_DATETIME_PATTERN))\n\n        val suiteName = context\n            .testClass\n\t\t\t\t\t\t.orElseThrow().let {\n\t\t\t\t\t\t\t\tAnnotationUtils.findAnnotation(it, DisplayName::class.java)\n            }.orElseThrow {\n                IllegalStateException(\"Test suite must be annotated with @DisplayName\")\n            }.value\n            .splitToSequence(\" \")\n            .joinToString(\"-\")\n\n\t\tval resultName = \"$ciJobId-$suiteName-$currentTime.mp4\" \n\n\t\treturn resultName\n\t}\n\n\tprivate val selenoidUrl by lazy {\n\t\tSystem.getenv(SELENOID_URL_ENV_PROPERTY_NAME) ?: SELENOID_DEFAULT_SERVICE_URL\n\t}\n}Я целенаправленно стараюсь писать при таких решениях простой и понятный код, для того чтобы решение могло поддерживаться многими людьми и командами.Проверить данное решение помог синтетический тест:Запустить два тестовых класса:@SelenideTest \n@DisplayName(\"A\") \nclass ASuite {\n\n\t@Test\n\tfun aTest() {\n\t\topen(\"https://www.google.com\")\n\t\tSelenide.sleep(5 * 1000)\n\t}\n}@SelenideTest \n@DisplayName(\"B\") \nclass BSuite {\n\n\t@Test\n\tfun bTest() {\n\t\tSelenide.open(\"https://www.yandex.ru\")\n\t\tSelenide.sleep(5 * 1000)\n\t}\n}Убедиться, что в Selenoid создано ровно два видео c нужным именем, а каждое видео содержит исполнение всех тестов тестового класса.Результат более чем устроил:Два видео с теста, как доктор прописалКак сформировать таймлайн и временные метки для тестового сьютаСложность заключалась в том, что хотелось одновременно сделать простое и понятное решение, но и максимально точно формировать все эти временные метки с учётом поведения тестов на Selenoid.Вдохновившись примером вофициальной документацииJUni5 для работы со временем, алгоритм сразу пришёл в голову:При начале работы Extension создать внутри него поле, содержащее счётчик времени с началом в нуле.Перед запуском всех тестов в классе и при поднятом флаге SELENOID_VIDEO зарегистрировать для webdriver кастомныйWebdriverListener, у которого есть ссылка на этот счётчик. Этот listener должен запустить счёт времени только тогда, когда произошло первое взаимодействие с браузером в автотестах. Я выбрал завязку на срабатывание метода webdrivernavigate(), так как именно он вызывается при вызове метода open() библиотеки Selenide, c вызовом которого начинается любой автотеста. И к тому же этот listener обязан хранить внутри себя состояние первого обращения к методу navigate, чтобы корректно обрабатывать и не реагировать на последующие вызовы navigate.Перед каждым запуском конкретно взятого автотеста снимать состояние счётчика времени и регистрировать его в какой-нибудь переменной. Да и в лог добавить бы. В этом нам поможет реализация нового интерфейса внутри нашего Extension —BeforeEachCallback, позволяющая добавить некую функциональность, которая будет выполнена прямо перед стартом каждого отдельно взятого автотеста.Если тест упал по какой-либо причине, нужно получить текущее состояние счётчика времени, а также на момент запуска теста, и добавить это всё в лог. В этом нам поможет реализация нового интерфейса внутри нашего Extension —TestWatcher, позволяющая добавлять функциональность после успеха/падения/пропуска автотеста.После прохождения всех автотестов сбрасывать счётчик времени и отзывать работу WebDriverListener.Не забываем, что все эти функции должны исполняться только для Selenide тестов.Предлагаю взглянуть на новый этап реализации MVP нашего Extension:Extension с поддержкой временных метокprivate val logger = KotlinLogging.logger {}\n\nclass SelenideCoolExtension : BeforeAllCallback, AfterAllCallback, TestWatcher, BeforeEachCallback {\n\n    // Инциализируем переменную для регистрации меток времени\n    private val timeSnapshot = AtomicLong(0)\n    \n    // Инициализируем счетчик времени\n    private val stopwatch: Stopwatch = Stopwatch.createUnstarted()\n\n    private lateinit var extensionListener: WebDriverListener \n    \n    override fun beforeAll(context: ExtensionContext) {\n    \n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n\n        // Настраиваем Selenide конфигурацию только в случае запуска Selenide тестов\n        matchAnnotation?.let {\n\n            // Рекомендация от разработчиков Selenide - использовать однопоточный режим исполнения тестов\n            checkSingleThreadExecution(context)\n\n            val capabilities = DesiredCapabilities()\n            // Здесь могут идти дополнительные настройки самого браузера\n\n            // Настраиваем, если нужно запуск через Selenoid\n            if (checkSelenoidSupport()) {\n                Configuration.remote = \"$selenoidUrl/wd/hub\" \n                Configuration.driverManagerEnabled = false\n                // Настраиваем, если нужно, и опцию видеозаписи с уникальным именем для видео \n                // на основе метки имени тествого класса, данных CI/Local режима запуска,\n                // и UTC времени для удобства поиска в Selenoid \n                capabilities.setCapability(\"selenoid:options\", prepareSelenoidOptions(context))\n            }\n            // Регистрируем listener только при включенной опции записи видео\n            if (checkVideoRecorderSupport()) { \n                extensionListener = CounterListener(stopwatch) \n                WebDriverRunner.addListener(extensionListener)\n            }\n            // Полностью готовые capabilities пробрасываются в конфигурацию\n            Configuration.browserCapabilities = capabilities\n        }\n    }\n\n    override fun beforeEach(context: ExtensionContext) {\n        val matchAnnotation = parseSelenideTest(context)\n\n        matchAnnotation?.let {\n            // Фиксируем время старта теста только при включенной опции записи видео\n            if (checkVideoRecorderSupport()) { \n                stopwatch.elapsed(TimeUnit.SECONDS).let { time ->\n                    timeSnapshot.set(time)\n                }\n            }\n        }\n    }\n\n    override fun testFailed(context: ExtensionContext, cause: Throwable?) {\n        val matchAnnotation = parseSelenideTest(context)\n        \n        // Логируем время старта теста и время падения по отношению к таймлайну видео\n        // только при включенной опции записи видео\n        matchAnnotation?.let {\n            if (checkVideoRecorderSupport()) {\n                logger.error { \"Test is failed. Test start time in video - ${timeSnapshot.get()} sec\" }\n                stopwatch.elapsed(TimeUnit.SECONDS).let {\n                    logger.error { \"Test failure is on $it sec\" }\n                } \n            }\n        }\n    }\n\n    override fun afterAll(context: ExtensionContext) {\n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n\n        // Закрываем сессию только для Selenide тестов\n        // Отзываем listener\n        // А также логируем общее время видеозаписи\n        matchAnnotation?.let {\n            if (checkVideoRecorderSupport()) {\n                logger.warn { \"Test run seconds: ${stopwatch.elapsed(TimeUnit.SECONDS)} seconds\" } \n                stopwatch.reset()\n            }\n            WebDriverRunner.closeWebDriver()\n            if (this::extensionListener.isInitialized) {\n                WebDriverRunner.removeListener(extensionListener)\n            }\n        }\n    }\n\n    private fun parseSelenideTest(ctx: ExtensionContext): SelenideTest? { \n        return ctx\n            .testClass\n            .orElseThrow { -> IllegalStateException(\"Something wrong with context. Test must contain\n    ancestor (test class)\") }\n            .let { AnnotationUtils.findAnnotation(it, SelenideTest::class.java) } \n            .orElse(null)\n    }\n\n    private fun checkSingleThreadExecution(context: ExtensionContext) {\n        context.getConfigurationParameter(\"junit.jupiter.execution.parallel.enabled\")?.ifPresent {\n            if (it.toBoolean()) throw IllegalStateException(\"This extension works only with single thread mode\")  \n        }\n    }\n\n    private fun checkSelenoidSupport(): Boolean {\n        return when (System.getenv(SELENOID_SUPPORT_ENV_PROPERTY_NAME)) {\n            \"1\" -> true\n            else -> false \n        }\n    }\n\n    private fun checkVideoRecorderSupport(): Boolean {\n        return when (System.getenv(SELENOID_VIDEO_SUPPORT_ENV_PROPERTY_NAME)) {\n            \"1\" -> true\n            else -> false \n        }\n    }\n\n    private fun prepareSelenoidOptions(context: ExtensionContext): Map<String, Any> { \n        val selenoidOptions = mutableMapOf<String, Any>(\n            \"enableVNC\" to true, \n        )\n        if (checkVideoRecorderSupport()) { \n            selenoidOptions[\"enableVideo\"] = true \n            selenoidOptions[\"videoName\"] = generateVideoName(context)\n        }\n        return selenoidOptions \n    }\n\n    private fun generateVideoName(context: ExtensionContext): String {\n\n            val ciJobId = System.getenv(GITLAB_JOB_ID_ENV_PROPERTY_NAME) ?: \"Local\"\n            val currentTime = ZonedDateTime.now(Clock.systemUTC())\n                .format(DateTimeFormatter.ofPattern(SELENOID_VIDEO_DATETIME_PATTERN))\n\n            val suiteName = context\n                .testClass\n                .orElseThrow().let {\n                    AnnotationUtils.findAnnotation(it, DisplayName::class.java)\n                }.orElseThrow {\n                    IllegalStateException(\"Test suite must be annotated with @DisplayName\")\n                }.value\n                .splitToSequence(\" \")\n                .joinToString(\"-\")\n\n            val resultName = \"$ciJobId-$suiteName-$currentTime.mp4\" \n            return resultName\n    }\n    private val selenoidUrl by lazy {\n         System.getenv(SELENOID_URL_ENV_PROPERTY_NAME) ?: SELENOID_DEFAULT_SERVICE_URL\n    }   \n}MVP реализация собственного WebDriverListener выглядит так:private val logger = KotlinLogging.logger {}\n\nclass CounterListener(private val timer: Stopwatch) : WebDriverListener {\n\n    private val sessionCreated = AtomicBoolean(false)\n\n    override fun afterAnyCall(target: Any?, method: Method?, args: Array<out Any>?, result: Any?) { \n        if (method?.name == LISTENER_TARGET_METHOD_FOR_TRACKING) {\n            if (!sessionCreated.get()) {\n                logger.warn { \"Session start was intercepted, starting counting time\" } \n                    if (!timer.isRunning) {\n                        timer.start()\n                    }\n                sessionCreated.set(true) \n            }\n        }\n    }\n    \n    override fun afterQuit(driver: WebDriver?) {\n        logger.warn { \"Resetting time counter due to driver close\" } \n        sessionCreated.set(false)\n    } \n}В качестве счетчика времени взял проверенный опытом счетчик отGuava.  Считать будем в миллисекундах — пусть и грубо, но для первого варианта реализации подойдёт.Для проверки доработок написал следующий синтетический тест:Запустить тестовый класс, в котором все тестовые методы реализованы падающими.@SelenideTest \n@TestMethodOrder(MethodOrderer.OrderAnnotation::class) \n@DisplayName(\"A\")\nclass ASuite {\n\n    private val EXPECTED_TITLE = \"совсем случайный текст\"\n    \n    @Test\n    @Order(1)\n    fun aTest() {\n        open(\"https://www.google.com\")\n        element(By.xpath(\"//input[@title='Поиск']\")).setValue(\"Проверка синтетического теста1\").submit() \n        Assertions.assertEquals(title(), EXPECTED_TITLE)\n    }\n\n    @Test\n    @Order(2)\n    fun bSyntheticFailedTest() {\n        open(\"https://www.google.com\")\n        element(By.xpath(\"//input[@title='Поиск']\")).setValue(\"Проверка синтетического теста2\").submit()             \n        Assertions.assertEquals(title(), EXPECTED_TITLE)\n    }\n\n\n    @Test\n    @Order(3)\n    fun cTest() {\n        open(\"https://www.google.com\")\n        element(By.xpath(\"//input[@title='Поиск']\")).setValue(\"Проверка синтетического теста3\").submit()\n        Assertions.assertEquals(title(), EXPECTED_TITLE)\n    }\n}По логам увидеть метки времени.Перейти в сформированном видео на секунду падения из лога 3.После запуска этих тестов логах отобразилось следующее:[Test worker] INFO com.codeborne.selenide.drivercommands.CreateDriverCommand - Created webdriver in thread 1: RemoteWebDriver -> RemoteWebDriver: chrome on LINUX (a7d95bf7873bfc86345b131ee7e8a3ae)\n[Test worker] INFO com.codeborne.selenide.drivercommands.CreateDriverCommand - Add listeners to webdriver: [tech.inno.qa.core.ui.extension.CounterListener@1cdd31a4]\n[Test worker] WARN tech.inno.qa.core.ui.extension.CounterListener - Session start was intercepted, starting counting time\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test is failed. Test start time in video - 0 ms\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test failure is on 1748 ms\n\nexpected: <совсем случайный текст> but was: <Проверка синтетического теста1 - Поиск в Google>\nExpected :совсем случайный текст\nActual :Проверка синтетического теста1 - Поиск в Google\n\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test is failed. Test start time in video - 2204 ms\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test failure is on 5044 ms\n\nexpected: <совсем случайный текст> but was: <Проверка синтетического теста2 - Поиск в Google>\nExpected :совсем случайный текст\nActual :Проверка синтетического теста2 - Поиск в Google\n\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test is failed. Test start time in video - 5411 ms\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test failure is on 7773 ms\n\nexpected: <совсем случайный текст> but was: <Проверка синтетического теста3 - Поиск в Google>\nExpected :совсем случайный текст\n\n[Test worker] WARN tech.inno.qa.core.ui.extension.SelenideExtension - Test run: 7779 ms\n[Test worker] INFO com.codeborne.selenide.drivercommands.CloseDriverCommand - Close webdriver: 1 -> Decorated {RemoteWebDriver: chrome on LINUX (a7d95bf7873bfc86345b131ee7e8a3ae)}...\n[Test worker] WARN tech.inno.qa.core.ui.extension.CounterListener - Resetting counter state due to driver close\n[Test worker] INFO com.codeborne.selenide.drivercommands.CloseDriverCommand - Closed webdriver 1 in 117 msРади примера откроем видео на моменте ошибки теста N3 — 7 773 мс (7–8 секунды на стандартном HTML5 видеоконтейнере) и убедимся, что там возникает падение:Минутка заметокК сожалению, не удалось добиться прецизионной точности во временных метках, потому что весь процесс строится на обёртках вокруг событий. Не удалось найти вменяемого способа зацепиться за событие именно старта видеозаписи, так как этим занимается функция Selenoid. Счётчик может промахнуться на какую-то долю секунды в зависимости от скорости сетевого взаимодействия.В моём же варианте сильно помогло, что CI раннеры, на которых запускаются автотесты, имеют очень быстрый доступ к Selenoid, так как находятся в одной подсети инфраструктуры.В целом, результат устраивает, метки времени более-менее точны, поэтому идём дальше.Как связать метки времени видео с отчётом AllureЗдесь не обошлось без творческой нотки. С ходу предсказуемое решение не шло, но были следующие идеи:возможно, проще отрезать кусочек видео по меткам от основного видео тестового сьюта и приложить его в отчёт в качестве «вложения» для конкретного теста. Как оказалось, не проще, да и не очень хотелось использовать библиотеки по обработке видео на JVM.как вариант, не париться вообще, и отдавать просто ссылку на видео в Allure отчёт для конкретного теста, а также дать потребителям решения директиву смотреть в логи и идти на нужные секунды вручную. Как оказалось, конечные потребители хотели видеть факты прохождения тестов в одном месте, поэтому этот вариант тоже отпал.Но вскоре до меня дошло, что ничто не мешает использовать в качестве «вложений» кусочки HTML-разметки. Это значило, что удастся:управлять поведением конкретно взятого HTML5 элемента (в данном случае это <video/>) на уровне javascript;писать в этой разметке то, что хочется потребителям.Вот какой алгоритм родился в голове:Перед запуском всех тестов в классе сохраняем сгенерированное имя для Selenoid видео в поле нашего Extension.После падения какого-либо теста генерируем HTML5 код с самописным js, который модифицирует видеоплеер, и открывает видео только на секундах прохождения упавшего теста. Например, из 10-минутного видео показывать всего лишь 30 секунд.Сгенерированный код сохраняем как «вложение» конкретно взятого теста с помощьюAllureLifecycle. Этот класс позволяет безопасно обращаться с данными для отчёта Allure. Для этого разработаем отдельный метод.Таким образом в Extension нужно всего лишь добавить поведение в реализацию интерфейса TestWatcher, предварительно реализовав функцию генерации улучшенного «вложения» для Allure.Для доработок видео решил обернуть стандартный видеоконтейнер в плеерPlyr.  Он показался удобной обёрткой над стандартным видеоплеером, и он может пригодиться, если в какой-то момент потребители захотят ещё больше фич для взаимодействия с видеоотчётами.Как же заставить плеер открыть видео только на нужных секундах? Ответ кроется в стариннойспецификации W3Cпо работе с медиафрагментами. Этим решается проблема — могу на каждом Allure «вложении» открывать одно и то же видео, только на разных метках.Давайте взглянем на итоговый код:Финальная версия Extensionclass SelenideExtension1 : BeforeAllCallback, AfterAllCallback, BeforeEachCallback, TestWatcher { \n\n    // Инциализируем переменную для регистрации меток времени\n    private val testStartTimeSnapshot = AtomicLong(0)\n\n    // Инициализируем счетчик времени\n    private val stopwatch: Stopwatch = Stopwatch.createUnstarted() \n    private lateinit var extensionListener: WebDriverListener\n\n\n    // Инициализируем переменную для хранения названия видео-файла \n    // Так как все тесты в классе принадлежат одному видео \n    private val currentVideoLink = AtomicReference(\"\")\n    \n    override fun beforeAll(context: ExtensionContext) {\n    \n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n    \n        // Настраиваем Selenide конфигурацию только в случае запуска Selenide тестов\n        matchAnnotation?.let {\n    \n            // Рекомендация от разработчиков Selenide - использовать однопоточный режим исполнения тестов\n            checkSingleThreadExecution(context)\n    \n            val capabilities = DesiredCapabilities()\n\n            // Здесь могут идти дополнительные настройки самого браузера\n\n            // Настраиваем, если нужно запуск через Selenoid\n            if (checkSelenoidSupport()) {\n            Configuration.remote = \"$selenoidUrl/wd/hub\" \n            Configuration.driverManagerEnabled = false\n            // Настраиваем, если нужно, и опцию видеозаписи с уникальным именем для видео \n            // на основе метки имени тествого класса, данных CI/Local режима запуска,\n            // и UTC времени для удобства поиска в Selenoid \n            capabilities.setCapability(\"selenoid:options\", prepareSelenoidOptions(context))\n            }\n\n            // Полностью готовые capabilities пробрасываются в конфигурацию\n            Configuration.browserCapabilities = capabilities\n\n            // Регистрируем listener только при поднятом флаге необходимости записи видео\n            if (checkSelenoidVideoSupport()) { \n                extensionListener = CounterListener(stopwatch) \n                WebDriverRunner.addListener(extensionListener)\n            } \n        }\n    }\n\n    override fun beforeEach(context: ExtensionContext) {\n\n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n\n        matchAnnotation?.let {\n\n            // Здесь, если нужно, чистим состояние браузера (cookies, localstorage, etc..)\n\n            // Фиксируем время старта теста только при включенной опции записи видео\n            if (checkSelenoidVideoSupport()) { \n                testStartTimeSnapshot.set(stopwatch.elapsed(TimeUnit.MILLISECONDS))\n            } \n        }\n    }\n\n    override fun testFailed(context: ExtensionContext, cause: Throwable?) {\n\n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n\n        // Логируем время старта теста и время падения по отношению к таймлайну видео\n        // только для Selenide тестов, и при включенной опции записи видео\n        // Готовим вложение с метками времени в случае падения теста\n        matchAnnotation?.let {\n            \n            if (checkSelenoidVideoSupport()) {\n                val testStartTime = testStartTimeSnapshot.get()\n                logger.error { \"Test is failed. Test start time in video - ${testStartTime} ms\" } \n                stopwatch.elapsed(TimeUnit.MILLISECONDS).let {\n                    logger.error { \"Test failure is on $it ms\" }\n                    prepareAllureVideoAttachment(testStartTime, it)\n\n                } \n            }\n        }\n    }\n\n    override fun afterAll(context: ExtensionContext) {\n\n        // Проверяем, что тестовый класс содержит Selenide тесты\n        val matchAnnotation = parseSelenideTest(context)\n\n        // Закрываем сессию только для Selenide тестов,\n        // отзываем listener, и также логируем общее время видеозаписи\n        matchAnnotation?.let {\n            if (checkSelenoidVideoSupport()) {\n                logger.warn { \"Test run: ${stopwatch.elapsed(TimeUnit.MILLISECONDS)} ms\" } \n                stopwatch.reset()\n            }\n            if (WebDriverRunner.hasWebDriverStarted()) {\n                WebDriverRunner.closeWebDriver()\n            }\n            if (this::extensionListener.isInitialized) { \n                WebDriverRunner.removeListener(extensionListener)\n            } \n        }\n    }\n\n    private val selenoidUrl by lazy {\n        System.getenv(SELENOID_URL_ENV_PROPERTY_NAME) ?: SELENOID_DEFAULT_SERVICE_URL\n    }\n    \n    private fun parseSelenideTest(ctx: ExtensionContext): SelenideTest? {\n        return ctx.testClass.orElseThrow { -> IllegalStateException(\"Something wrong with context. Test must contain ancestor (test class)\") }\n            .let { AnnotationUtils.findAnnotation(it, SelenideTest::class.java) }.orElse(null)\n    }\n\n    private fun checkSingleThreadExecution(context: ExtensionContext) { \n        context.getConfigurationParameter(\"junit.jupiter.execution.parallel.enabled\")?.ifPresent {\n            if (it.toBoolean()) throw IllegalStateException(\"This extension works only with single thread mode\")\n            }\n    }\n\n\n    private fun checkSelenoidSupport(): Boolean {\n        return when (System.getenv(SELENOID_SUPPORT_ENV_PROPERTY_NAME)) {\n            \"1\" -> true\n            else -> false \n        }\n    }\n\n    private fun checkSelenoidVideoSupport(): Boolean {\n        return when (System.getenv(SELENOID_VIDEO_SUPPORT_ENV_PROPERTY_NAME)) {\n            \"1\" -> true \n            else -> false\n            } \n    }\n\n    private fun checkScreenResolution(): String {\n            val resolution = System.getenv(SELENOID_DEFAULT_SCREEN_RESOLUTION_ENV_PROPERTY_NAME) ?: \"normal\" \n            return try {\n                ScreenResolution.valueOf(resolution.uppercase()).value \n            } catch (e: IllegalArgumentException) {\n                ScreenResolution.NORMAL.value\n            }\n    }\n\n    private fun prepareSelenoidOptions(context: ExtensionContext): Map<String, Any> { \n        val selenoidOptions = mutableMapOf<String, Any>(\n            \"enableVNC\" to true, \"enableLog\" to true \n        )\n        if (checkSelenoidVideoSupport()) { \n            selenoidOptions[\"enableVideo\"] = true \n            selenoidOptions[\"videoName\"] = generateVideoName(context) \n            selenoidOptions[\"videoFrameRate\"] to 24 \n            selenoidOptions[\"screenResolution\"] = checkScreenResolution()\n        }\n    return selenoidOptions \n    }\n\n    private fun generateVideoName(context: ExtensionContext): String {\n\n        val ciJobId = System.getenv(GITLAB_JOB_ID_ENV_PROPERTY_NAME) ?: \"Local\"\n\n        val currentTime = ZonedDateTime.now(Clock.systemUTC()).format(DateTimeFormatter.ofPattern(SELENOID_VIDEO_DATETIME_PATTERN))\n        \n        val suiteName = context.testClass.orElseThrow().let { \n            AnnotationUtils.findAnnotation(it, DisplayName::class.java)\n        }.orElseThrow {\n            IllegalStateException(\"Test suite must be annotated with @DisplayName\")\n        }.value.splitToSequence(\" \").joinToString(\"-\")\n\n        val resultName = \"$ciJobId-$suiteName-$currentTime.mp4\"\n        // Сохраняем имя файла\n        currentVideoLink.set(resultName)\n\n        return resultName \n    }\n\n    private fun generateVideoLink(): String {\n        return \"$selenoidUrl/video/${currentVideoLink.get()}\"\n    }\n\n    private fun prepareAllureVideoAttachment(startTime: Long, failTime: Long) { \n        val lifecycle = Allure.getLifecycle()\n        val startTimeFormatted = DurationFormatUtils.formatDurationHMS(startTime) \n        val failTimeFormatted = DurationFormatUtils.formatDurationHMS(failTime)\n\n        lifecycle.currentTestCase.ifPresent {\n            lifecycle.addAttachment(\n                \"Recorded video\", \"text/html\", \".html\", \"\"\"\n                    <html>\n                        <head>\n                            <script src=\"https://cdn.plyr.io/3.7.2/plyr.js\"></script>\n                            <link rel=\"stylesheet\" href=\"https://cdn.plyr.io/3.7.2/plyr.css\" />\n                        </head>\n                        <body>\n                            <p>Время прохождения теста: $startTimeFormatted - $failTimeFormatted</p>\n                            <video controls playsinline id=\"player\" onpause=\"this.load()\">\n                                <source src='${generateVideoLink()}#t=${startTimeFormatted},${failTimeFormatted}' type='video/mp4'>\n                            </video>\n                            <script>\n                                const player = new Plyr(window.document.getElementById('player'), { \n                                    title: 'Selenoid Player',\n                                    invertTime: false\n                                 });\n                            </script>\n                         </body>\n                     </html>\n                \"\"\".trimIndent().toByteArray()\n            )\n        }\n    }\n}Для проверки работоспособности нужно будет:запустить Selenide тесты. Нам хватит того, что было описано в предыдущем пункте статьи;взглянуть на сформированные временные метки;сформировать Allure отчёт — локально или удалённо в Allure TestOPS;убедиться, что метки времени в логах соответствуют фрагменту видео с упавшим тестом в Allure отчёте.После запуска тестов нам достаточно посмотреть на отрывок лога любого упавшего теста:[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test is failed. Test start time in video - 2179 ms\n[Test worker] ERROR tech.inno.qa.core.ui.extension.SelenideExtension - Test failure is on 4291 ms\n\nexpected: <совсем случайный текст> but was: <Проверка синтетического теста2 - Поиск в Google>\nExpected :совсем случайный текст\nActual   :Проверка синтетического теста2 - Поиск в GoogleИ взглянем на упавший тест в TestOPS:Всё работает!Видео открывается на конкретном временном диапазоне, а после того как он завершился, отматывает время на начало упавшего теста. Вуаля!Красота спасёт автотестыФункциональное и удобное решение улучшает процесс отчётности UI-автотестов. Да, оно собрано на коленке, но позволяет эффективно решать поставленную задачу. А ещё лишний раз напоминает нам о возможности автоматизации и кастомизации процессов при должном упорстве и желании.Сейчас MVP дорабатывается. Есть идеи сделать видеоотчёты ещё приятней, реализовав текстовое описание идущего теста на видео тестового сьюта через субтитры, но об этом как-нибудь в другой раз.Советы по оптимизации, а также вопросы по реализации принимаются в комментариях."}, {"user_id": 1, "title": "Китайская компания построит завод по производству карбида кремния в Воронеже", "description": "Китайская компания HENAN Si&Cпланирует возвестив Воронежской области предприятие по производству кар", "category_id": 5, "active": true, "is_deleted": false, "created_at": "2022-10-28T14:05:15.000Z", "updated_at": "2022-10-28T14:05:15.000Z", "image": "https://habrastorage.org/r/w780q1/webt/p5/9r/fi/p59rfis98xkwf9hgsyex1a1ymow.jpeg", "content": "Китайская компания HENAN Si&Cпланирует возвестив Воронежской области предприятие по производству карбида кремния. Фирма намерена вложить в проект ₽3 млрд.Завод построят в посёлке Латная Семилукского района. Предприятие разместят в 10 км от места добычи кварцевого песка.Производственные мощности завода на первом этапе составят 42 тыс. тонн, уточняют власти Воронежской области. Около 70% карбида кремния, который произведут на предприятии, будут поставлять в Китай и страны Юго-Восточной Азии. Оставшиеся ресурсы реализуют в России.В правительстве Воронежской области отметили, что наличие значительной сырьевой базы в регионе, дешёвой электроэнергии, требуемой инфраструктуры и развитой логистики позволит выпускать продукцию на 30% дешевле, чем в других странах и субъектах РФ.Стороны нашли поставщиков оборудования и технологий из Китая, уверяют власти региона. Уже прошли четыре раунда переговоров для утверждения схемы производства и применения технологий.Карбид кремния применяют для абразивной обработки, производства электроники и электротехники, зеркальных элементов в оптических системах, графена, а также в ядерной энергетике и других отраслях."}, {"user_id": 1, "title": "Спрос на гравировку кириллической раскладки на клавиатурах и ноутбуках вырос на 20-30% за последние полгода", "description": "За последние шесть месяцев (с марта по сентябрь) число заказов на услуги по гравировке кириллицы на ", "category_id": 2, "active": true, "is_deleted": false, "created_at": "2022-10-28T14:03:12.000Z", "updated_at": "2022-10-28T14:03:12.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/bbf/510/74f/bbf51074f1cb0ed47bf231f81206dd4f.jpeg", "content": "За последние шесть месяцев (с марта по сентябрь) число заказов на услуги по гравировке кириллицы на клавиатурах и ноутбуках увеличилось на 30% год к году,сообщил«Коммерсанту» управляющий мастерскими McGraver Юрий Жогов.Тренд подтверждают и в другом сервисе по гравировке,Gravirovkapro.ru: там рост спроса за аналогичный период оценивают на уровне 20%. При этом, по словам Жогова, большую часть заказов размещают юридические лица, в основном продавцы электроники.О росте спроса на такие услуги со стороны юридических лиц, а не частных клиентов говорит и руководитель отдела развития «Сети компьютерных клиник» Алексей Дудин. «Мы рассматривали возможность открытия собственного направления бизнеса по нанесению гравировки, но в конечном итоге решили привлечь партнёров», — сказал он.Спрос дистрибуторов электроники на услуги по гравировке кириллицы на клавиатурах и ноутбуках связан с легализацией в России параллельного импорта.Дело в том, что поставщики начали ввозить в страну ноутбуки и клавиатуры, не предназначенные для российского рынка — и, следовательно, без российской раскладки. Раскладка гравируется производителем непосредственно на заводе-изготовителе в зависимости от страны, куда поставляется техника.«Для удобства покупателей мы сами гравируем ноутбуки, не предназначенные для российского рынка, на базе собственной инфраструктуры и при участии профильного партнёра. На такие девайсы действует наша собственная годовая гарантия», — рассказал директор кластера «Домашний офис и фото» группы «М.Видео-Эльдорадо» Олег Резников.Для бюджетных моделей ноутбуков клиентам в комплекте предлагают наклейки с кириллическими буквами, а не гравировка. «В перспективе мы рассматриваем предоставление услуги гравировки и для девайсов, приобретенных вне наших сетей», — отметил он.Однако развитию такого бизнеса может помешать нехватка расходных материалов и комплектующих для оборудования, предупреждают владельцы гравировочных сервисов."}, {"user_id": 1, "title": "А можно мне радиоуправляемый самосвал, но только чтоб настоящий? Да запросто", "description": "Повозиться пришлось изрядно, но зато теперь «Норникель» стал первым в России обладателем беспилотных", "category_id": 4, "active": true, "is_deleted": false, "created_at": "2022-10-28T13:57:07.000Z", "updated_at": "2022-10-28T13:57:07.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b89/95d/685/b8995d685dadc69c4bea4f2c027d2295.jpg", "content": "Повозиться пришлось изрядно, но зато теперь «Норникель» стал первым в России обладателем беспилотных самосвалов, поднимающих полезные ископаемые с глубины 850 метров.Меня зовут Андрей Дышлюк, я руководитель проектной команды по внедрению системы Sandvik AutoMine на нескольких автономных шахтных самосвалах, работающих на руднике «Скалистый». В этой статье расскажу, почему мы выбрали именно AutoMine, как строили сеть, ставили лазерные барьеры, обкатывали маршруты в часы пересменки и заставили технику работать безопаснее и дольше.Современные требования к безопасности работников вместе с высокими стандартами охраны труда поднимают планку тех условий, которые нужно создавать на месте добычи. Известно, что профессия шахтёра была и остаётся одной из самых опасных в мире, и мы стремимся к снижению всех рисков, в том числе и для тех работников, которые взаимодействуют с крупным тяжёлым оборудованием и трудятся в самых суровых и малопредсказуемых условиях.К счастью, современные технологии позволяют переложить выполнение опасных работ на роботов. Каким бы аккуратным и добросовестным ни был сотрудник, ничто не может гарантировать абсолютную безопасность. С роботом всё так же, просто потери лишь материальные. Кроме того, используя технику вместо людей так часто, как только это возможно, добычу можно сделать более быстрой и эффективной.Словом, на производстве мы делаем серьёзные ставки на автоматизированные системы с удалённым управлением. Они выигрывают сразу по нескольким показателям: повышают безопасность, скорость и эффективность выполнения работ.Для роботизации мы обратились в шведскую компанию Sandvik, — это производитель самой разной сложной горной техники. Они создают решения для автономного и дистанционно управляемого самоходного оборудования. Первый проект автономных автосамосвалов был реализован шведами ещё 15 лет назад на руднике Эль-Теньенте в Чили, ну а сегодня уже более 65 горнодобывающих компаний по всему миру используют платформу AutoMine.Изучив варианты, наша проектная команда остановила свой выбор на системе AutoMine Multi-Lite, позволяющей одновременно автоматизировать несколько единиц оборудования. Для пилота мы выбрали два самосвала: Sandvik TH540 и TH545i.Критерии выбора места рудника для пилотного внедренияКак и создатели голливудских сериалов, менеджеры в системе добычи знают, что пилот — самое важное. При выборе рудника для пилотного проекта мы учитывали следующие критерии:протяжённость самосвальной откатки (любопытный факт: в «Норникеле» есть рудник, где протяжённость подземных выработок составляет более 300 километров);возраст и марка техники;возможность ограждения опасной зоны горных работ;наличие производственных мощностей в рамках всего предприятия.У нас есть уникальная для России и СНГ система имитационного моделирования (СИМ). Математическая программа-симулятор рассчитывает необходимое количество подземной техники и создает оптимальную модель по транспортировке руды из шахты на поверхность. Так же, как навигатор видит пробки, СИМ определяет простои и коллизии в процессе добычи горной массы и, с учетом специфики каждой единицы техники, рассчитывает оптимальный производственный алгоритм.Прогнав условия на моделях, мы получили идеального кандидата: рудник «Скалистый».«Скалистый» — молодой рудник, его открыли только в 1986 году. Добыча здесь началась в 2004-м, и несколько лет назад шахтёры спустились на отметку –2056 метров.Для пилотного внедрения автономных самосвалов был выбран горизонт –850 метров, так как это одна из главных транспортных артерий рудника. Протяжённость рабочей зоны самосвалов тут составляет 3 километра, плюс на участке находятся 6 участковых рудоспусков (где руда загружается в кузовы самосвалов) и 2 капитальных рудоспуска, где самосвалы руду разгружают. Мне кажется, это тема для целой отдельной статьи...При этом у нас было ещё и уникальное окно возможностей, т. к. во время рабочей смены существует полуторачасовой технологический перерыв, во время которого проводится массовый взрыв породы на глубине. В это время (вы же помните, что мы за безопасность, да?) персоналу запрещено находиться под землёй. Фокус в том, что этот запрет распространяется лишь на людей. А техника, если она автономна, вполне может работать. Мы решили воспользоваться этой возможностью.Прежде чем внедрять, надо подготовитьсяПеред непосредственным внедрением мы взялись за постройку бесшовной сети. По всему маршруту установили более 70 единиц сетевого оборудования для развёртывания промышленной сети Wi-Fi. Использовались коммутаторы и точки доступа Wi-Fi. Главным условием работы сети было наличие бесшовного роуминга. Автономное управление возможно только тогда, когда самосвалы успевают переключаться между точками, потому что потеря сигнала (опять же с точки зрения безопасности) приводит к остановке техники.Именно на этом шаге у нас были наибольшие проблемы: всё-таки условия подземного рудника — это не квартира и не отель. Пришлось повозиться с подбором моделей точек доступа, выбором их мощности и тщательной настройкой положения антенн и маршрутизации трафика. Но мы справились.Следующим шагом стало оборудование диспетчерской, куда мы поставили пульт управления с креслом оператора. Кресло, кстати, очень удобное, я сам провёл в нём не один час.Ещё одним подготовительным этапом стала установка в шахте около 20 барьеров безопасности. По сути, это были лазерные барьеры, ограничивающие зоны работы автономной технике. Система была настроена так, что если какая-то техника или персонал пересекал любой из этих барьеров, вся техника в этой зоне сразу останавливалась и переключалась на стояночный тормоз.Наконец, после всех подготовительных шагов, мы вместе со шведскими коллегами из Sandvik смонтировали комплекты модернизации на самосвалы. Сюда входили лазерные сканеры, видеокамеры, антенны Wi-Fi, различные датчики и сенсоры (к примеру, датчики положения кузова, шарнирного сочленения). Вот теперь всё готово и пора рулить!Он сказал: «Поехали!..»Чтобы самосвалы ездили по маршруту, мы составили двухмерную карту горной выработки. Плюс разметили места остановки под рудоспусками для загрузки и разгрузки руды. Делали это с помощью лазерных сканеров, установленных на автосамосвалы.Здесь нас тоже ждало множество нюансов. К примеру, чтобы самосвалы не задевали борт выработки, нам приходилось вручную править радиусы поворота. Понятно, что выработка постоянно меняется, поэтому маршруты приходилось постоянно обновлять.Дополнительно на нас давило время: для обкатки системы был доступен лишь 1–2-часовой промежуток пересменки, а по каждому участку нужно было прогнать самосвал несколько раз. Тестируя построенный маршрут и корректируя его при необходимости.Наконец наступил день икс и был дан торжественный старт работы.Что получили в итогеКак и говорилось в начале, основной целью было повышение безопасности наших сотрудников. Дополнительно мы получили +1,5 часа работы самосвалов в сутки за счёт использования техники во время взрывных работ. В пересчёте на рейсы мы получили дополнительные 4–6 циклов, что позволило увеличить массу перевозимой породы на 20 тысяч тонн в год.ВыводыРудник «Скалистый» — важный актив «Норникеля». Он отрабатывает руды двух месторождений: Талнахского и Октябрьского. Запасы руды составляют около 60 миллионов тонн, и при нынешней скорости добычи рудник сможет проработать ещё 40–45 лет. Но важен «Скалистый» не только с точки зрения запасов.«Норникель» планирует в ближайшем будущем создать так называемый безлюдный рудник. Там будут работать исключительно роботы, дроны и другое автоматизированное оборудование. И не будет ни одного человека, подвергающегося опасности. По планам, первой такой зоной станет шахта «Глубокая» рудника «Скалистый». Внедрение автономных самосвалов — ещё один шаг к этой цели.Приходите в комментарии и подписывайтесь на наш блог, — у нас ещё много интересных тем, будем рады обсудить."}, {"user_id": 1, "title": "Из-за бага в iOS 16.1 на некоторых iPhone произвольно отключается сеть Wi-Fi", "description": "Пользователи iPhone начали массово жаловаться, что после обновления до iOS 16.1 смартфон начал произ", "category_id": 4, "active": true, "is_deleted": false, "created_at": "2022-10-28T13:54:59.000Z", "updated_at": "2022-10-28T13:54:59.000Z", "image": "https://habrastorage.org/r/w780q1/getpro/habr/upload_files/4cd/b0e/6fa/4cdb0e6fa98bcd3a784748bb124dd453.jpg", "content": "Пользователи iPhone начали массово жаловаться, что после обновления до iOS 16.1 смартфон начал произвольно отключаться от сети Wi-Fi. Ошибка встречается не только на новых смартфонах, но и на старых моделях.Владельцы iPhone, обновившиеся до iOS 16.1, сообщают (1,2,3,4), что их смартфоны в течение дня отключаются от сети Wi-Fi. При этом на других устройствах, подключённых к этой же сети, всё продолжает работать. Также один из пользователей рассказал, что ошибка встречается на iPad под управлением iPadOS 16.1.Apple пока не прокомментировала ошибку, но пользователи сообщают, что переподключение к точке доступа не решает проблему, сброс до заводских настроек также оказался неэффективным способом избавиться от ошибки. Сообщения пользователей сначала начали появляться в социальных сетях, но теперь соответствующие жалобыпубликуютсяи на официальном портале Apple Community.КомпаниявыпустилаiOS 16.1, iPadOS 16.1 и macOS Ventura 24 октября 2022 года. Пользователи macOS получили доступ к функции Stage Manager, позволяющей закреплять окна и приложения в отдельных рабочих пространствах."}]